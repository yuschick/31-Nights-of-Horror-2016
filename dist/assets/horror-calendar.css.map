{
	"version": 3,
	"sourceRoot": "/Users/daniel.yuschick/Documents/Repos/horror-calendar/app/styles",
	"file": "horror-calendar.css",
	"sources": [
		"../../sass_compiler-input_base_path-jx2llKwu.tmp/0/app/styles/app.scss",
		"../../sass_compiler-input_base_path-jx2llKwu.tmp/0/app/styles/partials/plugin-stylesheets/bourbon/_bourbon.scss",
		"../../sass_compiler-input_base_path-jx2llKwu.tmp/0/app/styles/partials/plugin-stylesheets/bourbon/settings/_prefixer.scss",
		"../../sass_compiler-input_base_path-jx2llKwu.tmp/0/app/styles/partials/plugin-stylesheets/bourbon/settings/_px-to-em.scss",
		"../../sass_compiler-input_base_path-jx2llKwu.tmp/0/app/styles/partials/plugin-stylesheets/bourbon/settings/_asset-pipeline.scss",
		"../../sass_compiler-input_base_path-jx2llKwu.tmp/0/app/styles/partials/plugin-stylesheets/bourbon/helpers/_convert-units.scss",
		"../../sass_compiler-input_base_path-jx2llKwu.tmp/0/app/styles/partials/plugin-stylesheets/bourbon/helpers/_font-source-declaration.scss",
		"../../sass_compiler-input_base_path-jx2llKwu.tmp/0/app/styles/partials/plugin-stylesheets/bourbon/helpers/_gradient-positions-parser.scss",
		"../../sass_compiler-input_base_path-jx2llKwu.tmp/0/app/styles/partials/plugin-stylesheets/bourbon/helpers/_is-num.scss",
		"../../sass_compiler-input_base_path-jx2llKwu.tmp/0/app/styles/partials/plugin-stylesheets/bourbon/helpers/_linear-angle-parser.scss",
		"../../sass_compiler-input_base_path-jx2llKwu.tmp/0/app/styles/partials/plugin-stylesheets/bourbon/helpers/_linear-gradient-parser.scss",
		"../../sass_compiler-input_base_path-jx2llKwu.tmp/0/app/styles/partials/plugin-stylesheets/bourbon/helpers/_linear-positions-parser.scss",
		"../../sass_compiler-input_base_path-jx2llKwu.tmp/0/app/styles/partials/plugin-stylesheets/bourbon/helpers/_linear-side-corner-parser.scss",
		"../../sass_compiler-input_base_path-jx2llKwu.tmp/0/app/styles/partials/plugin-stylesheets/bourbon/helpers/_radial-arg-parser.scss",
		"../../sass_compiler-input_base_path-jx2llKwu.tmp/0/app/styles/partials/plugin-stylesheets/bourbon/helpers/_radial-positions-parser.scss",
		"../../sass_compiler-input_base_path-jx2llKwu.tmp/0/app/styles/partials/plugin-stylesheets/bourbon/helpers/_radial-gradient-parser.scss",
		"../../sass_compiler-input_base_path-jx2llKwu.tmp/0/app/styles/partials/plugin-stylesheets/bourbon/helpers/_render-gradients.scss",
		"../../sass_compiler-input_base_path-jx2llKwu.tmp/0/app/styles/partials/plugin-stylesheets/bourbon/helpers/_shape-size-stripper.scss",
		"../../sass_compiler-input_base_path-jx2llKwu.tmp/0/app/styles/partials/plugin-stylesheets/bourbon/helpers/_str-to-num.scss",
		"../../sass_compiler-input_base_path-jx2llKwu.tmp/0/app/styles/partials/plugin-stylesheets/bourbon/functions/_assign.scss",
		"../../sass_compiler-input_base_path-jx2llKwu.tmp/0/app/styles/partials/plugin-stylesheets/bourbon/functions/_color-lightness.scss",
		"../../sass_compiler-input_base_path-jx2llKwu.tmp/0/app/styles/partials/plugin-stylesheets/bourbon/functions/_contains.scss",
		"../../sass_compiler-input_base_path-jx2llKwu.tmp/0/app/styles/partials/plugin-stylesheets/bourbon/functions/_is-length.scss",
		"../../sass_compiler-input_base_path-jx2llKwu.tmp/0/app/styles/partials/plugin-stylesheets/bourbon/functions/_is-size.scss",
		"../../sass_compiler-input_base_path-jx2llKwu.tmp/0/app/styles/partials/plugin-stylesheets/bourbon/functions/_px-to-em.scss",
		"../../sass_compiler-input_base_path-jx2llKwu.tmp/0/app/styles/partials/plugin-stylesheets/bourbon/functions/_px-to-rem.scss",
		"../../sass_compiler-input_base_path-jx2llKwu.tmp/0/app/styles/partials/plugin-stylesheets/bourbon/functions/_strip-units.scss",
		"../../sass_compiler-input_base_path-jx2llKwu.tmp/0/app/styles/partials/plugin-stylesheets/bourbon/functions/_tint-shade.scss",
		"../../sass_compiler-input_base_path-jx2llKwu.tmp/0/app/styles/partials/plugin-stylesheets/bourbon/functions/_transition-property-name.scss",
		"../../sass_compiler-input_base_path-jx2llKwu.tmp/0/app/styles/partials/plugin-stylesheets/bourbon/functions/_unpack.scss",
		"../../sass_compiler-input_base_path-jx2llKwu.tmp/0/app/styles/partials/plugin-stylesheets/bourbon/functions/_modular-scale.scss",
		"../../sass_compiler-input_base_path-jx2llKwu.tmp/0/app/styles/partials/plugin-stylesheets/bourbon/css3/_animation.scss",
		"../../sass_compiler-input_base_path-jx2llKwu.tmp/0/app/styles/partials/plugin-stylesheets/bourbon/css3/_appearance.scss",
		"../../sass_compiler-input_base_path-jx2llKwu.tmp/0/app/styles/partials/plugin-stylesheets/bourbon/css3/_backface-visibility.scss",
		"../../sass_compiler-input_base_path-jx2llKwu.tmp/0/app/styles/partials/plugin-stylesheets/bourbon/css3/_background.scss",
		"../../sass_compiler-input_base_path-jx2llKwu.tmp/0/app/styles/partials/plugin-stylesheets/bourbon/css3/_background-image.scss",
		"../../sass_compiler-input_base_path-jx2llKwu.tmp/0/app/styles/partials/plugin-stylesheets/bourbon/css3/_border-image.scss",
		"../../sass_compiler-input_base_path-jx2llKwu.tmp/0/app/styles/partials/plugin-stylesheets/bourbon/css3/_border-radius.scss",
		"../../sass_compiler-input_base_path-jx2llKwu.tmp/0/app/styles/partials/plugin-stylesheets/bourbon/css3/_box-sizing.scss",
		"../../sass_compiler-input_base_path-jx2llKwu.tmp/0/app/styles/partials/plugin-stylesheets/bourbon/css3/_calc.scss",
		"../../sass_compiler-input_base_path-jx2llKwu.tmp/0/app/styles/partials/plugin-stylesheets/bourbon/css3/_columns.scss",
		"../../sass_compiler-input_base_path-jx2llKwu.tmp/0/app/styles/partials/plugin-stylesheets/bourbon/css3/_filter.scss",
		"../../sass_compiler-input_base_path-jx2llKwu.tmp/0/app/styles/partials/plugin-stylesheets/bourbon/css3/_flex-box.scss",
		"../../sass_compiler-input_base_path-jx2llKwu.tmp/0/app/styles/partials/plugin-stylesheets/bourbon/css3/_font-face.scss",
		"../../sass_compiler-input_base_path-jx2llKwu.tmp/0/app/styles/partials/plugin-stylesheets/bourbon/css3/_font-feature-settings.scss",
		"../../sass_compiler-input_base_path-jx2llKwu.tmp/0/app/styles/partials/plugin-stylesheets/bourbon/css3/_hidpi-media-query.scss",
		"../../sass_compiler-input_base_path-jx2llKwu.tmp/0/app/styles/partials/plugin-stylesheets/bourbon/css3/_hyphens.scss",
		"../../sass_compiler-input_base_path-jx2llKwu.tmp/0/app/styles/partials/plugin-stylesheets/bourbon/css3/_image-rendering.scss",
		"../../sass_compiler-input_base_path-jx2llKwu.tmp/0/app/styles/partials/plugin-stylesheets/bourbon/css3/_keyframes.scss",
		"../../sass_compiler-input_base_path-jx2llKwu.tmp/0/app/styles/partials/plugin-stylesheets/bourbon/css3/_linear-gradient.scss",
		"../../sass_compiler-input_base_path-jx2llKwu.tmp/0/app/styles/partials/plugin-stylesheets/bourbon/css3/_perspective.scss",
		"../../sass_compiler-input_base_path-jx2llKwu.tmp/0/app/styles/partials/plugin-stylesheets/bourbon/css3/_placeholder.scss",
		"../../sass_compiler-input_base_path-jx2llKwu.tmp/0/app/styles/partials/plugin-stylesheets/bourbon/css3/_radial-gradient.scss",
		"../../sass_compiler-input_base_path-jx2llKwu.tmp/0/app/styles/partials/plugin-stylesheets/bourbon/css3/_selection.scss",
		"../../sass_compiler-input_base_path-jx2llKwu.tmp/0/app/styles/partials/plugin-stylesheets/bourbon/css3/_text-decoration.scss",
		"../../sass_compiler-input_base_path-jx2llKwu.tmp/0/app/styles/partials/plugin-stylesheets/bourbon/css3/_transform.scss",
		"../../sass_compiler-input_base_path-jx2llKwu.tmp/0/app/styles/partials/plugin-stylesheets/bourbon/css3/_transition.scss",
		"../../sass_compiler-input_base_path-jx2llKwu.tmp/0/app/styles/partials/plugin-stylesheets/bourbon/css3/_user-select.scss",
		"../../sass_compiler-input_base_path-jx2llKwu.tmp/0/app/styles/partials/plugin-stylesheets/bourbon/addons/_clearfix.scss",
		"../../sass_compiler-input_base_path-jx2llKwu.tmp/0/app/styles/partials/plugin-stylesheets/bourbon/addons/_directional-values.scss",
		"../../sass_compiler-input_base_path-jx2llKwu.tmp/0/app/styles/partials/plugin-stylesheets/bourbon/addons/_ellipsis.scss",
		"../../sass_compiler-input_base_path-jx2llKwu.tmp/0/app/styles/partials/plugin-stylesheets/bourbon/addons/_font-family.scss",
		"../../sass_compiler-input_base_path-jx2llKwu.tmp/0/app/styles/partials/plugin-stylesheets/bourbon/addons/_hide-text.scss",
		"../../sass_compiler-input_base_path-jx2llKwu.tmp/0/app/styles/partials/plugin-stylesheets/bourbon/addons/_html5-input-types.scss",
		"../../sass_compiler-input_base_path-jx2llKwu.tmp/0/app/styles/partials/plugin-stylesheets/bourbon/addons/_position.scss",
		"../../sass_compiler-input_base_path-jx2llKwu.tmp/0/app/styles/partials/plugin-stylesheets/bourbon/addons/_prefixer.scss",
		"../../sass_compiler-input_base_path-jx2llKwu.tmp/0/app/styles/partials/plugin-stylesheets/bourbon/addons/_retina-image.scss",
		"../../sass_compiler-input_base_path-jx2llKwu.tmp/0/app/styles/partials/plugin-stylesheets/bourbon/addons/_size.scss",
		"../../sass_compiler-input_base_path-jx2llKwu.tmp/0/app/styles/partials/plugin-stylesheets/bourbon/addons/_timing-functions.scss",
		"../../sass_compiler-input_base_path-jx2llKwu.tmp/0/app/styles/partials/plugin-stylesheets/bourbon/addons/_triangle.scss",
		"../../sass_compiler-input_base_path-jx2llKwu.tmp/0/app/styles/partials/plugin-stylesheets/bourbon/addons/_word-wrap.scss",
		"../../sass_compiler-input_base_path-jx2llKwu.tmp/0/app/styles/partials/plugin-stylesheets/bourbon/_bourbon-deprecated-upcoming.scss",
		"../../sass_compiler-input_base_path-jx2llKwu.tmp/0/app/styles/partials/general-setup/_fonts.scss",
		"../../sass_compiler-input_base_path-jx2llKwu.tmp/0/app/styles/partials/general-setup/_variables.scss",
		"../../sass_compiler-input_base_path-jx2llKwu.tmp/0/app/styles/partials/general-setup/_reset.scss",
		"../../sass_compiler-input_base_path-jx2llKwu.tmp/0/app/styles/partials/general-setup/_mixins.scss",
		"../../sass_compiler-input_base_path-jx2llKwu.tmp/0/app/styles/partials/site-modules/_title-bar.scss",
		"../../sass_compiler-input_base_path-jx2llKwu.tmp/0/app/styles/partials/site-modules/_text-styles.scss",
		"../../sass_compiler-input_base_path-jx2llKwu.tmp/0/app/styles/partials/site-modules/_wallpaper.scss",
		"../../sass_compiler-input_base_path-jx2llKwu.tmp/0/app/styles/partials/site-modules/_nav-arrows.scss",
		"../../sass_compiler-input_base_path-jx2llKwu.tmp/0/app/styles/partials/site-modules/_movie-card.scss",
		"../../sass_compiler-input_base_path-jx2llKwu.tmp/0/app/styles/partials/site-modules/_movie-trailer.scss"
	],
	"sourcesContent": [
		"// ------ Bourbon CSS ------ //\n@import \"partials/plugin-stylesheets/bourbon/bourbon\";\n\n// ------ Font & Color Variables and Classes ------ //\n@import \"partials/general-setup/fonts\";\n@import \"partials/general-setup/variables\";\n\n// ------ Reset CSS ------ //\n@import \"partials/general-setup/reset\";\n\n// ------ Site's Fonts, Variables & Plugins ------ //\n// @import \"partials/general-setup/animations\";\n@import \"partials/general-setup/mixins\";\n\n// ------ Site's Styles - Base & Print ------ //\n@import \"partials/site-modules/title-bar\";\n@import \"partials/site-modules/text-styles\";\n@import \"partials/site-modules/wallpaper\";\n@import \"partials/site-modules/nav-arrows\";\n@import \"partials/site-modules/movie-card\";\n@import \"partials/site-modules/movie-trailer\";",
		"// Bourbon 4.1.0\n// http://bourbon.io\n// Copyright 2011-2014 thoughtbot, inc.\n// MIT License\n\n// Settings\n@import \"settings/prefixer\";\n@import \"settings/px-to-em\";\n@import \"settings/asset-pipeline\";\n\n// Custom Helpers\n@import \"helpers/convert-units\";\n@import \"helpers/font-source-declaration\";\n@import \"helpers/gradient-positions-parser\";\n@import \"helpers/is-num\";\n@import \"helpers/linear-angle-parser\";\n@import \"helpers/linear-gradient-parser\";\n@import \"helpers/linear-positions-parser\";\n@import \"helpers/linear-side-corner-parser\";\n@import \"helpers/radial-arg-parser\";\n@import \"helpers/radial-positions-parser\";\n@import \"helpers/radial-gradient-parser\";\n@import \"helpers/render-gradients\";\n@import \"helpers/shape-size-stripper\";\n@import \"helpers/str-to-num\";\n\n// Custom Functions\n@import \"functions/assign\";\n@import \"functions/color-lightness\";\n@import \"functions/contains\";\n@import \"functions/is-length\";\n@import \"functions/is-size\";\n@import \"functions/px-to-em\";\n@import \"functions/px-to-rem\";\n@import \"functions/strip-units\";\n@import \"functions/tint-shade\";\n@import \"functions/transition-property-name\";\n@import \"functions/unpack\";\n@import \"functions/modular-scale\";\n\n// CSS3 Mixins\n@import \"css3/animation\";\n@import \"css3/appearance\";\n@import \"css3/backface-visibility\";\n@import \"css3/background\";\n@import \"css3/background-image\";\n@import \"css3/border-image\";\n@import \"css3/border-radius\";\n@import \"css3/box-sizing\";\n@import \"css3/calc\";\n@import \"css3/columns\";\n@import \"css3/filter\";\n@import \"css3/flex-box\";\n@import \"css3/font-face\";\n@import \"css3/font-feature-settings\";\n@import \"css3/hidpi-media-query\";\n@import \"css3/hyphens\";\n@import \"css3/image-rendering\";\n@import \"css3/keyframes\";\n@import \"css3/linear-gradient\";\n@import \"css3/perspective\";\n@import \"css3/placeholder\";\n@import \"css3/radial-gradient\";\n@import \"css3/selection\";\n@import \"css3/text-decoration\";\n@import \"css3/transform\";\n@import \"css3/transition\";\n@import \"css3/user-select\";\n\n// Addons & other mixins\n@import \"addons/clearfix\";\n@import \"addons/directional-values\";\n@import \"addons/ellipsis\";\n@import \"addons/font-family\";\n@import \"addons/hide-text\";\n@import \"addons/html5-input-types\";\n@import \"addons/position\";\n@import \"addons/prefixer\";\n@import \"addons/retina-image\";\n@import \"addons/size\";\n@import \"addons/timing-functions\";\n@import \"addons/triangle\";\n@import \"addons/word-wrap\";\n\n// Soon to be deprecated Mixins\n@import \"bourbon-deprecated-upcoming\";\n",
		"// Variable settings for /addons/prefixer.scss\n$prefix-for-webkit:    true !default;\n$prefix-for-mozilla:   true !default;\n$prefix-for-microsoft: true !default;\n$prefix-for-opera:     true !default;\n$prefix-for-spec:      true !default; // required for keyframe mixin\n",
		"$em-base: 16px !default;\n",
		"$asset-pipeline: false !default;\n",
		"//************************************************************************//\n// Helper function for str-to-num fn.\n// Source: http://sassmeister.com/gist/9647408\n//************************************************************************//\n@function _convert-units($number, $unit) {\n  $strings: 'px' 'cm' 'mm' '%' 'ch' 'pica' 'in' 'em' 'rem' 'pt' 'pc' 'ex' 'vw' 'vh' 'vmin' 'vmax', 'deg', 'rad', 'grad', 'turn';\n  $units:   1px  1cm  1mm  1%  1ch  1pica  1in  1em  1rem  1pt  1pc  1ex  1vw  1vh  1vmin  1vmax,  1deg,  1rad,  1grad, 1turn;\n  $index: index($strings, $unit);\n\n  @if not $index {\n    @warn \"Unknown unit `#{$unit}`.\";\n    @return false;\n  }\n  @return $number * nth($units, $index);\n}\n",
		"// Used for creating the source string for fonts using @font-face\n// Reference: http://goo.gl/Ru1bKP\n\n@function font-url-prefixer($asset-pipeline) {\n  @if $asset-pipeline == true {\n    @return font-url;\n  } @else {\n    @return url;\n  }\n}\n\n@function font-source-declaration(\n  $font-family,\n  $file-path,\n  $asset-pipeline,\n  $file-formats,\n  $font-url) {\n\n  $src: null;\n\n  $formats-map: (\n    eot:   $font-url + \"(\\\"#{$file-path}.eot?#iefix\\\")\" format(\"embedded-opentype\"),\n    woff2: $font-url + \"(\\\"#{$file-path}.woff2\\\")\" format(\"woff2\"),\n    woff:  $font-url + \"(\\\"#{$file-path}.woff\\\")\" format(\"woff\"),\n    ttf:   $font-url + \"(\\\"#{$file-path}.ttf\\\")\" format(\"truetype\"),\n    svg:   $font-url + \"(\\\"#{$file-path}.svg##{$font-family}\\\")\" format(\"svg\")\n  );\n\n  @each $format, $file-path in $formats-map {\n    @if contains($file-formats, $format) {\n      $src: append($src, $file-path, comma);\n    }\n  }\n\n  @return $src;\n}\n",
		"@function _gradient-positions-parser($gradient-type, $gradient-positions) {\n  @if $gradient-positions\n  and ($gradient-type == linear)\n  and (type-of($gradient-positions) != color) {\n    $gradient-positions: _linear-positions-parser($gradient-positions);\n  }\n  @else if $gradient-positions\n  and ($gradient-type == radial)\n  and (type-of($gradient-positions) != color) {\n    $gradient-positions: _radial-positions-parser($gradient-positions);\n  }\n  @return $gradient-positions;\n}\n",
		"// Check for a valid number\n\n@function _is-num($value) {\n  @return contains('0' '1' '2' '3' '4' '5' '6' '7' '8' '9' 0 1 2 3 4 5 6 7 8 9, $value);\n}\n",
		"// Private function for linear-gradient-parser\n@function _linear-angle-parser($image, $first-val, $prefix, $suffix) {\n  $offset: null;\n  $unit-short:  str-slice($first-val, str-length($first-val) - 2, str-length($first-val));\n  $unit-long:   str-slice($first-val, str-length($first-val) - 3, str-length($first-val));\n\n  @if ($unit-long == \"grad\") or\n      ($unit-long == \"turn\") {\n    $offset: if($unit-long == \"grad\", -100grad * 3, -0.75turn);\n  }\n\n  @else if ($unit-short == \"deg\") or\n           ($unit-short == \"rad\") {\n    $offset: if($unit-short == \"deg\", -90 * 3, 1.6rad);\n  }\n\n  @if $offset {\n    $num: _str-to-num($first-val);\n\n    @return (\n      webkit-image: -webkit- + $prefix + ($offset - $num) + $suffix,\n      spec-image: $image\n    );\n  }\n}\n",
		"@function _linear-gradient-parser($image) {\n  $image: unquote($image);\n  $gradients: ();\n  $start: str-index($image, \"(\");\n  $end: str-index($image, \",\");\n  $first-val: str-slice($image, $start + 1, $end - 1);\n\n  $prefix: str-slice($image, 0, $start);\n  $suffix: str-slice($image, $end, str-length($image));\n\n  $has-multiple-vals: str-index($first-val, \" \");\n  $has-single-position: unquote(_position-flipper($first-val) + \"\");\n  $has-angle: _is-num(str-slice($first-val, 0, 0));\n\n  @if $has-multiple-vals {\n    $gradients: _linear-side-corner-parser($image, $first-val, $prefix, $suffix, $has-multiple-vals);\n  }\n\n  @else if $has-single-position != \"\" {\n    $pos: unquote($has-single-position + \"\");\n\n    $gradients: (\n      webkit-image: -webkit- + $image,\n      spec-image: $prefix + \"to \" + $pos + $suffix\n    );\n  }\n\n  @else if $has-angle {\n    // Rotate degree for webkit\n    $gradients: _linear-angle-parser($image, $first-val, $prefix, $suffix);\n  }\n\n  @else {\n    $gradients: (\n      webkit-image: -webkit- + $image,\n      spec-image: $image\n    );\n  }\n\n  @return $gradients;\n}\n",
		"@function _linear-positions-parser($pos) {\n  $type: type-of(nth($pos, 1));\n  $spec: null;\n  $degree: null;\n  $side: null;\n  $corner: null;\n  $length: length($pos);\n  // Parse Side and corner positions\n  @if ($length > 1) {\n    @if nth($pos, 1) == \"to\" { // Newer syntax\n      $side: nth($pos, 2);\n\n      @if $length == 2 { // eg. to top\n        // Swap for backwards compatability\n        $degree: _position-flipper(nth($pos, 2));\n      }\n      @else if $length == 3 { // eg. to top left\n        $corner: nth($pos, 3);\n      }\n    }\n    @else if $length == 2 { // Older syntax (\"top left\")\n      $side: _position-flipper(nth($pos, 1));\n      $corner: _position-flipper(nth($pos, 2));\n    }\n\n    @if (\"#{$side} #{$corner}\" == \"left top\") or (\"#{$side} #{$corner}\" == \"top left\") {\n      $degree: _position-flipper(#{$side}) _position-flipper(#{$corner});\n    }\n    @else if (\"#{$side} #{$corner}\" == \"right top\") or (\"#{$side} #{$corner}\" == \"top right\") {\n      $degree: _position-flipper(#{$side}) _position-flipper(#{$corner});\n    }\n    @else if (\"#{$side} #{$corner}\" == \"right bottom\") or (\"#{$side} #{$corner}\" == \"bottom right\") {\n      $degree: _position-flipper(#{$side}) _position-flipper(#{$corner});\n    }\n    @else if (\"#{$side} #{$corner}\" == \"left bottom\") or (\"#{$side} #{$corner}\" == \"bottom left\") {\n      $degree: _position-flipper(#{$side}) _position-flipper(#{$corner});\n    }\n    $spec: to $side $corner;\n  }\n  @else if $length == 1 {\n    // Swap for backwards compatability\n    @if $type == string {\n      $degree: $pos;\n      $spec: to _position-flipper($pos);\n    }\n    @else {\n      $degree: -270 - $pos; //rotate the gradient opposite from spec\n      $spec: $pos;\n    }\n  }\n  $degree: unquote($degree + \",\");\n  $spec:   unquote($spec + \",\");\n  @return $degree $spec;\n}\n\n@function _position-flipper($pos) {\n @return if($pos == left, right, null)\n         if($pos == right, left, null)\n         if($pos == top, bottom, null)\n         if($pos == bottom, top, null);\n}\n",
		"// Private function for linear-gradient-parser\n@function _linear-side-corner-parser($image, $first-val, $prefix, $suffix, $has-multiple-vals) {\n  $val-1: str-slice($first-val, 0, $has-multiple-vals - 1 );\n  $val-2: str-slice($first-val, $has-multiple-vals + 1, str-length($first-val));\n  $val-3: null;\n  $has-val-3: str-index($val-2, \" \");\n\n  @if $has-val-3 {\n    $val-3: str-slice($val-2, $has-val-3 + 1, str-length($val-2));\n    $val-2: str-slice($val-2, 0, $has-val-3 - 1);\n  }\n\n  $pos: _position-flipper($val-1) _position-flipper($val-2) _position-flipper($val-3);\n  $pos: unquote($pos + \"\");\n\n  // Use old spec for webkit\n  @if $val-1 == \"to\" {\n    @return (\n      webkit-image: -webkit- + $prefix + $pos + $suffix,\n      spec-image: $image\n    );\n  }\n\n  // Bring the code up to spec\n  @else {\n    @return (\n      webkit-image: -webkit- + $image,\n      spec-image: $prefix + \"to \" + $pos + $suffix\n    );\n  }\n}\n",
		"@function _radial-arg-parser($G1, $G2, $pos, $shape-size) {\n  @each $value in $G1, $G2 {\n    $first-val: nth($value, 1);\n    $pos-type:  type-of($first-val);\n    $spec-at-index: null;\n\n    // Determine if spec was passed to mixin\n    @if type-of($value) == list {\n      $spec-at-index: if(index($value, at), index($value, at), false);\n    }\n    @if $spec-at-index {\n      @if $spec-at-index > 1 {\n        @for $i from 1 through ($spec-at-index - 1) {\n          $shape-size: $shape-size nth($value, $i);\n        }\n        @for $i from ($spec-at-index + 1) through length($value) {\n          $pos: $pos nth($value, $i);\n        }\n      }\n      @else if $spec-at-index == 1 {\n        @for $i from ($spec-at-index + 1) through length($value) {\n          $pos: $pos nth($value, $i);\n        }\n      }\n      $G1: null;\n    }\n\n    // If not spec calculate correct values\n    @else {\n      @if ($pos-type != color) or ($first-val != \"transparent\") {\n        @if ($pos-type == number)\n        or ($first-val == \"center\")\n        or ($first-val == \"top\")\n        or ($first-val == \"right\")\n        or ($first-val == \"bottom\")\n        or ($first-val == \"left\") {\n\n          $pos: $value;\n\n          @if $pos == $G1 {\n            $G1: null;\n          }\n        }\n\n        @else if\n           ($first-val == \"ellipse\")\n        or ($first-val == \"circle\")\n        or ($first-val == \"closest-side\")\n        or ($first-val == \"closest-corner\")\n        or ($first-val == \"farthest-side\")\n        or ($first-val == \"farthest-corner\")\n        or ($first-val == \"contain\")\n        or ($first-val == \"cover\") {\n\n          $shape-size: $value;\n\n          @if $value == $G1 {\n            $G1: null;\n          }\n\n          @else if $value == $G2 {\n            $G2: null;\n          }\n        }\n      }\n    }\n  }\n  @return $G1, $G2, $pos, $shape-size;\n}\n",
		"@function _radial-positions-parser($gradient-pos) {\n  $shape-size: nth($gradient-pos, 1);\n  $pos:        nth($gradient-pos, 2);\n  $shape-size-spec: _shape-size-stripper($shape-size);\n\n  $pre-spec: unquote(if($pos, \"#{$pos}, \", null))\n             unquote(if($shape-size, \"#{$shape-size},\", null));\n  $pos-spec: if($pos, \"at #{$pos}\", null);\n\n  $spec: \"#{$shape-size-spec} #{$pos-spec}\";\n\n  // Add comma\n  @if ($spec != '  ') {\n    $spec: \"#{$spec},\"\n  }\n\n  @return $pre-spec $spec;\n}\n",
		"@function _radial-gradient-parser($image) {\n  $image: unquote($image);\n  $gradients: ();\n  $start: str-index($image, \"(\");\n  $end: str-index($image, \",\");\n  $first-val: str-slice($image, $start + 1, $end - 1);\n\n  $prefix: str-slice($image, 0, $start);\n  $suffix: str-slice($image, $end, str-length($image));\n\n  $is-spec-syntax: str-index($first-val, \"at\");\n\n  @if $is-spec-syntax and $is-spec-syntax > 1 {\n    $keyword: str-slice($first-val, 1, $is-spec-syntax - 2);\n    $pos: str-slice($first-val, $is-spec-syntax + 3, str-length($first-val));\n    $pos: append($pos, $keyword, comma);\n\n    $gradients: (\n      webkit-image: -webkit- + $prefix + $pos + $suffix,\n      spec-image: $image\n    )\n  }\n\n  @else if $is-spec-syntax == 1 {\n    $pos: str-slice($first-val, $is-spec-syntax + 3, str-length($first-val));\n\n    $gradients: (\n      webkit-image: -webkit- + $prefix + $pos + $suffix,\n      spec-image: $image\n    )\n  }\n\n  @else if str-index($image, \"cover\") or str-index($image, \"contain\") {\n    @warn \"Radial-gradient needs to be updated to conform to latest spec.\";\n\n    $gradients: (\n      webkit-image: null,\n      spec-image: $image\n    )\n  }\n\n  @else {\n    $gradients: (\n      webkit-image: -webkit- + $image,\n      spec-image: $image\n    )\n  }\n\n  @return $gradients;\n}\n",
		"// User for linear and radial gradients within background-image or border-image properties\n\n@function _render-gradients($gradient-positions, $gradients, $gradient-type, $vendor: false) {\n  $pre-spec: null;\n  $spec: null;\n  $vendor-gradients: null;\n  @if $gradient-type == linear {\n    @if $gradient-positions {\n      $pre-spec: nth($gradient-positions, 1);\n      $spec:     nth($gradient-positions, 2);\n    }\n  }\n  @else if $gradient-type == radial {\n    $pre-spec: nth($gradient-positions, 1);\n    $spec:     nth($gradient-positions, 2);\n  }\n\n  @if $vendor {\n    $vendor-gradients: -#{$vendor}-#{$gradient-type}-gradient(#{$pre-spec} $gradients);\n  }\n  @else if $vendor == false {\n    $vendor-gradients: \"#{$gradient-type}-gradient(#{$spec} #{$gradients})\";\n    $vendor-gradients: unquote($vendor-gradients);\n  }\n  @return $vendor-gradients;\n}\n",
		"@function _shape-size-stripper($shape-size) {\n  $shape-size-spec: null;\n  @each $value in $shape-size {\n    @if ($value == \"cover\") or ($value == \"contain\") {\n      $value: null;\n    }\n    $shape-size-spec: \"#{$shape-size-spec} #{$value}\";\n  }\n  @return $shape-size-spec;\n}\n",
		"//************************************************************************//\n// Helper function for linear/radial-gradient-parsers.\n// Source: http://sassmeister.com/gist/9647408\n//************************************************************************//\n@function _str-to-num($string) {\n  // Matrices\n  $strings: '0' '1' '2' '3' '4' '5' '6' '7' '8' '9';\n  $numbers:  0   1   2   3   4   5   6   7   8   9;\n\n  // Result\n  $result: 0;\n  $divider: 0;\n  $minus: false;\n\n  // Looping through all characters\n  @for $i from 1 through str-length($string) {\n    $character: str-slice($string, $i, $i);\n    $index: index($strings, $character);\n\n    @if $character == '-' {\n      $minus: true;\n    }\n\n    @else if $character == '.' {\n      $divider: 1;\n    }\n\n    @else {\n      @if not $index {\n        $result: if($minus, $result * -1, $result);\n        @return _convert-units($result, str-slice($string, $i));\n      }\n\n      $number: nth($numbers, $index);\n\n      @if $divider == 0 {\n        $result: $result * 10;\n      }\n\n      @else {\n        // Move the decimal dot to the left\n        $divider: $divider * 10;\n        $number: $number / $divider;\n      }\n\n      $result: $result + $number;\n    }\n  }\n  @return if($minus, $result * -1, $result);\n}\n",
		"@function assign-inputs($inputs, $pseudo: null) {\n  $list : ();\n\n  @each $input in $inputs {\n    $input: unquote($input);\n    $input: if($pseudo, $input + \":\" + $pseudo, $input);\n    $list: append($list, $input, comma);\n  }\n\n  @return $list;\n}",
		"// Programatically determines whether a color is light or dark\n// Returns a boolean\n// More details here http://robots.thoughtbot.com/closer-look-color-lightness\n\n@function is-light($hex-color) {\n  $-local-red: red(rgba($hex-color, 1.0));\n  $-local-green: green(rgba($hex-color, 1.0));\n  $-local-blue: blue(rgba($hex-color, 1.0));\n\n  $-local-lightness: ($-local-red * 0.2126 + $-local-green * 0.7152 + $-local-blue * 0.0722) / 255;\n\n  @return $-local-lightness > .6;\n}\n",
		"// Test a Sass list to see if it contains a defined value\n// Allows for checking if a list contains several values at once\n\n@function contains($list, $values...) {\n  @each $value in $values {\n    @if type-of(index($list, $value)) != \"number\" {\n      @return false;\n    }\n  }\n\n  @return true;\n}\n",
		"// Check for a valid length\n\n@function is-length($value) {\n  @return type-of($value) != \"null\" and (str-slice($value + \"\", 1, 4) == 'calc'\n       or index(auto inherit initial 0, $value)\n       or (type-of($value) == \"number\" and not(unitless($value))));\n}\n",
		"// Check for a valid size\n\n@function is-size($value) {\n  @return is-length($value)\n          or contains(\"fill\" \"fit-content\" \"min-content\" \"max-content\", $value);\n}\n",
		"// Convert pixels to ems\n// eg. for a relational value of 12px write em(12) when the parent is 16px\n// if the parent is another value say 24px write em(12, 24)\n\n@function em($pxval, $base: $em-base) {\n  @if not unitless($pxval) {\n      $pxval: strip-units($pxval);\n  }\n  @if not unitless($base) {\n      $base: strip-units($base);\n  }\n  @return ($pxval / $base) * 1em;\n}\n",
		"// Convert pixels to rems\n// eg. for a relational value of 12px write rem(12)\n// Assumes $em-base is the font-size of <html>\n\n@function rem($pxval) {\n  @if not unitless($pxval) {\n      $pxval: strip-units($pxval);\n  }\n\n  $base: $em-base;\n  @if not unitless($base) {\n      $base: strip-units($base);\n  }\n  @return ($pxval / $base) * 1rem;\n}\n",
		"// Srtips the units from a value. e.g. 12px -> 12\n\n@function strip-units($val) {\n  @return ($val / ($val * 0 + 1));\n}\n",
		"// Add percentage of white to a color\n@function tint($color, $percent){\n  @return mix(white, $color, $percent);\n}\n\n// Add percentage of black to a color\n@function shade($color, $percent){\n  @return mix(black, $color, $percent);\n}\n",
		"// Return vendor-prefixed property names if appropriate\n// Example: transition-property-names((transform, color, background), moz) -> -moz-transform, color, background\n//************************************************************************//\n@function transition-property-names($props, $vendor: false) {\n\t$new-props: ();\n\t\n\t@each $prop in $props {\n\t\t$new-props: append($new-props, transition-property-name($prop, $vendor), comma);\n\t}\n\n\t@return $new-props;\n}\n\n@function transition-property-name($prop, $vendor: false) {\n\t// put other properties that need to be prefixed here aswell\n\t@if $vendor and $prop == transform {\n\t\t@return unquote('-'+$vendor+'-'+$prop);\n\t}\n\t@else {\n\t\t@return $prop;\n\t}\n}",
		"// Convert shorthand to the 4-value syntax\n\n@function unpack($shorthand) {\n  @if length($shorthand) == 1 {\n    @return nth($shorthand, 1) nth($shorthand, 1) nth($shorthand, 1) nth($shorthand, 1);\n  }\n  @else if length($shorthand) == 2 {\n    @return nth($shorthand, 1) nth($shorthand, 2) nth($shorthand, 1) nth($shorthand, 2);\n  }\n  @else if length($shorthand) == 3 {\n    @return nth($shorthand, 1) nth($shorthand, 2) nth($shorthand, 3) nth($shorthand, 2);\n  }\n  @else {\n    @return $shorthand;\n  }\n}\n\n",
		"// Scaling Variables\n$golden:           1.618;\n$minor-second:     1.067;\n$major-second:     1.125;\n$minor-third:      1.2;\n$major-third:      1.25;\n$perfect-fourth:   1.333;\n$augmented-fourth: 1.414;\n$perfect-fifth:    1.5;\n$minor-sixth:      1.6;\n$major-sixth:      1.667;\n$minor-seventh:    1.778;\n$major-seventh:    1.875;\n$octave:           2;\n$major-tenth:      2.5;\n$major-eleventh:   2.667;\n$major-twelfth:    3;\n$double-octave:    4;\n\n$modular-scale-ratio: $perfect-fourth !default;\n$modular-scale-base: em($em-base) !default;\n\n@function modular-scale($increment, $value: $modular-scale-base, $ratio: $modular-scale-ratio) {\n  $v1: nth($value, 1);\n  $v2: nth($value, length($value));\n  $value: $v1;\n\n  // scale $v2 to just above $v1\n  @while $v2 > $v1 {\n    $v2: ($v2 / $ratio); // will be off-by-1\n  }\n  @while $v2 < $v1 {\n    $v2: ($v2 * $ratio); // will fix off-by-1\n  }\n\n  // check AFTER scaling $v2 to prevent double-counting corner-case\n  $double-stranded: $v2 > $v1;\n\n  @if $increment > 0 {\n    @for $i from 1 through $increment {\n      @if $double-stranded and ($v1 * $ratio) > $v2 {\n        $value: $v2;\n        $v2: ($v2 * $ratio);\n      } @else {\n        $v1: ($v1 * $ratio);\n        $value: $v1;\n      }\n    }\n  }\n\n  @if $increment < 0 {\n    // adjust $v2 to just below $v1\n    @if $double-stranded {\n      $v2: ($v2 / $ratio);\n    }\n\n    @for $i from $increment through -1 {\n      @if $double-stranded and ($v1 / $ratio) < $v2 {\n        $value: $v2;\n        $v2: ($v2 / $ratio);\n      } @else {\n        $v1: ($v1 / $ratio);\n        $value: $v1;\n      }\n    }\n  }\n\n  @return $value;\n}\n",
		"// http://www.w3.org/TR/css3-animations/#the-animation-name-property-\n// Each of these mixins support comma separated lists of values, which allows different transitions for individual properties to be described in a single style rule. Each value in the list corresponds to the value at that same position in the other properties.\n\n// Official animation shorthand property.\n@mixin animation ($animations...) {\n  @include prefixer(animation, $animations, webkit moz spec);\n}\n\n// Individual Animation Properties\n@mixin animation-name ($names...) {\n  @include prefixer(animation-name, $names, webkit moz spec);\n}\n\n\n@mixin animation-duration ($times...) {\n  @include prefixer(animation-duration, $times, webkit moz spec);\n}\n\n\n@mixin animation-timing-function ($motions...) {\n// ease | linear | ease-in | ease-out | ease-in-out\n  @include prefixer(animation-timing-function, $motions, webkit moz spec);\n}\n\n\n@mixin animation-iteration-count ($values...) {\n// infinite | <number>\n  @include prefixer(animation-iteration-count, $values, webkit moz spec);\n}\n\n\n@mixin animation-direction ($directions...) {\n// normal | alternate\n  @include prefixer(animation-direction, $directions, webkit moz spec);\n}\n\n\n@mixin animation-play-state ($states...) {\n// running | paused\n  @include prefixer(animation-play-state, $states, webkit moz spec);\n}\n\n\n@mixin animation-delay ($times...) {\n  @include prefixer(animation-delay, $times, webkit moz spec);\n}\n\n\n@mixin animation-fill-mode ($modes...) {\n// none | forwards | backwards | both\n  @include prefixer(animation-fill-mode, $modes, webkit moz spec);\n}\n",
		"@mixin appearance ($value) {\n  @include prefixer(appearance, $value, webkit moz ms o spec);\n}\n",
		"//************************************************************************//\n// Backface-visibility mixin\n//************************************************************************//\n@mixin backface-visibility($visibility) {\n  @include prefixer(backface-visibility, $visibility, webkit spec);\n}\n",
		"//************************************************************************//\n// Background property for adding multiple backgrounds using shorthand\n// notation.\n//************************************************************************//\n\n@mixin background($backgrounds...) {\n  $webkit-backgrounds: ();\n  $spec-backgrounds: ();\n\n  @each $background in $backgrounds {\n    $webkit-background: ();\n    $spec-background: ();\n    $background-type: type-of($background);\n\n    @if $background-type == string or $background-type == list {\n      $background-str: if($background-type == list, nth($background, 1), $background);\n\n      $url-str:       str-slice($background-str, 0, 3);\n      $gradient-type: str-slice($background-str, 0, 6);\n\n      @if $url-str == \"url\" {\n        $webkit-background: $background;\n          $spec-background: $background;\n      }\n\n      @else if $gradient-type == \"linear\" {\n        $gradients: _linear-gradient-parser(\"#{$background}\");\n        $webkit-background: map-get($gradients, webkit-image);\n        $spec-background:   map-get($gradients, spec-image);\n      }\n\n      @else if $gradient-type == \"radial\" {\n        $gradients: _radial-gradient-parser(\"#{$background}\");\n        $webkit-background: map-get($gradients, webkit-image);\n        $spec-background:   map-get($gradients, spec-image);\n      }\n\n      @else {\n        $webkit-background: $background;\n          $spec-background: $background;\n      }\n    }\n\n    @else {\n      $webkit-background: $background;\n        $spec-background: $background;\n    }\n\n    $webkit-backgrounds: append($webkit-backgrounds, $webkit-background, comma);\n    $spec-backgrounds:   append($spec-backgrounds,   $spec-background,   comma);\n  }\n\n  background: $webkit-backgrounds;\n  background: $spec-backgrounds;\n}\n",
		"//************************************************************************//\n// Background-image property for adding multiple background images with\n// gradients, or for stringing multiple gradients together.\n//************************************************************************//\n\n@mixin background-image($images...) {\n  $webkit-images: ();\n  $spec-images: ();\n\n  @each $image in $images {\n    $webkit-image: ();\n    $spec-image: ();\n\n    @if (type-of($image) == string) {\n      $url-str:       str-slice($image, 0, 3);\n      $gradient-type: str-slice($image, 0, 6);\n\n      @if $url-str == \"url\" {\n        $webkit-image: $image;\n          $spec-image: $image;\n      }\n\n      @else if $gradient-type == \"linear\" {\n        $gradients: _linear-gradient-parser($image);\n        $webkit-image:  map-get($gradients, webkit-image);\n        $spec-image:    map-get($gradients, spec-image);\n      }\n\n      @else if $gradient-type == \"radial\" {\n        $gradients: _radial-gradient-parser($image);\n        $webkit-image: map-get($gradients, webkit-image);\n        $spec-image:   map-get($gradients, spec-image);\n      }\n    }\n\n    $webkit-images: append($webkit-images, $webkit-image, comma);\n    $spec-images:   append($spec-images,   $spec-image,   comma);\n  }\n\n  background-image: $webkit-images;\n  background-image: $spec-images;\n}\n",
		"@mixin border-image($borders...) {\n  $webkit-borders: ();\n  $spec-borders: ();\n\n  @each $border in $borders {\n    $webkit-border: ();\n    $spec-border: ();\n    $border-type: type-of($border);\n\n    @if $border-type == string or list {\n      $border-str: if($border-type == list, nth($border, 1), $border);\n\n      $url-str:       str-slice($border-str, 0, 3);\n      $gradient-type: str-slice($border-str, 0, 6);\n\n      @if $url-str == \"url\" {\n        $webkit-border: $border;\n          $spec-border: $border;\n      }\n\n      @else if $gradient-type == \"linear\" {\n        $gradients: _linear-gradient-parser(\"#{$border}\");\n        $webkit-border: map-get($gradients, webkit-image);\n        $spec-border:   map-get($gradients, spec-image);\n      }\n\n      @else if $gradient-type == \"radial\" {\n        $gradients: _radial-gradient-parser(\"#{$border}\");\n        $webkit-border: map-get($gradients, webkit-image);\n        $spec-border:   map-get($gradients, spec-image);\n      }\n\n      @else {\n        $webkit-border: $border;\n          $spec-border: $border;\n      }\n    }\n\n    @else {\n      $webkit-border: $border;\n        $spec-border: $border;\n    }\n\n    $webkit-borders: append($webkit-borders, $webkit-border, comma);\n    $spec-borders:   append($spec-borders,   $spec-border,   comma);\n  }\n\n  -webkit-border-image: $webkit-borders;\n          border-image: $spec-borders;\n          border-style: solid;\n}\n\n//Examples:\n// @include border-image(url(\"image.png\"));\n// @include border-image(url(\"image.png\") 20 stretch);\n// @include border-image(linear-gradient(45deg, orange, yellow));\n// @include border-image(linear-gradient(45deg, orange, yellow) stretch);\n// @include border-image(linear-gradient(45deg, orange, yellow) 20 30 40 50 stretch round);\n// @include border-image(radial-gradient(top, cover, orange, yellow, orange));\n",
		"// Border Radius (Shorthand)\n// Provides a shorthand syntax to target and add border radii to both corners on one side of a box\n\n@mixin border-top-radius($radii) {\n  border-top-left-radius: $radii;\n  border-top-right-radius: $radii;\n}\n\n@mixin border-right-radius($radii) {\n  border-bottom-right-radius: $radii;\n  border-top-right-radius: $radii;\n}\n\n@mixin border-bottom-radius($radii) {\n  border-bottom-left-radius: $radii;\n  border-bottom-right-radius: $radii;\n}\n\n@mixin border-left-radius($radii) {\n  border-bottom-left-radius: $radii;\n  border-top-left-radius: $radii;\n}\n",
		"@mixin box-sizing ($box) {\n//  content-box | border-box | inherit\n  @include prefixer(box-sizing, $box, webkit moz spec);\n}\n",
		"@mixin calc($property, $value) {\n  #{$property}: -webkit-calc(#{$value});\n  #{$property}:         calc(#{$value});\n}\n",
		"@mixin columns($arg: auto) {\n// <column-count> || <column-width>\n  @include prefixer(columns, $arg, webkit moz spec);\n}\n\n@mixin column-count($int: auto) {\n// auto || integer\n  @include prefixer(column-count, $int, webkit moz spec);\n}\n\n@mixin column-gap($length: normal) {\n// normal || length\n  @include prefixer(column-gap, $length, webkit moz spec);\n}\n\n@mixin column-fill($arg: auto) {\n// auto || length\n  @include prefixer(column-fill, $arg, webkit moz spec);\n}\n\n@mixin column-rule($arg) {\n// <border-width> || <border-style> || <color>\n  @include prefixer(column-rule, $arg, webkit moz spec);\n}\n\n@mixin column-rule-color($color) {\n  @include prefixer(column-rule-color, $color, webkit moz spec);\n}\n\n@mixin column-rule-style($style: none) {\n// none | hidden | dashed | dotted | double | groove | inset | inset | outset | ridge | solid\n  @include prefixer(column-rule-style, $style, webkit moz spec);\n}\n\n@mixin column-rule-width ($width: none) {\n  @include prefixer(column-rule-width, $width, webkit moz spec);\n}\n\n@mixin column-span($arg: none) {\n// none || all\n  @include prefixer(column-span, $arg, webkit moz spec);\n}\n\n@mixin column-width($length: auto) {\n// auto || length\n  @include prefixer(column-width, $length, webkit moz spec);\n}\n",
		"@mixin filter($function: none) {\n  // <filter-function> [<filter-function]* | none\n  @include prefixer(filter, $function, webkit spec);\n}\n\n",
		"// CSS3 Flexible Box Model and property defaults\n\n// Custom shorthand notation for flexbox\n@mixin box($orient: inline-axis, $pack: start, $align: stretch) {\n  @include display-box;\n  @include box-orient($orient);\n  @include box-pack($pack);\n  @include box-align($align);\n}\n\n@mixin display-box {\n  display: -webkit-box;\n  display: -moz-box;\n  display: -ms-flexbox; // IE 10\n  display: box;\n}\n\n@mixin box-orient($orient: inline-axis) {\n// horizontal|vertical|inline-axis|block-axis|inherit\n  @include prefixer(box-orient, $orient, webkit moz spec);\n}\n\n@mixin box-pack($pack: start) {\n// start|end|center|justify\n  @include prefixer(box-pack, $pack, webkit moz spec);\n  -ms-flex-pack: $pack; // IE 10\n}\n\n@mixin box-align($align: stretch) {\n// start|end|center|baseline|stretch\n  @include prefixer(box-align, $align, webkit moz spec);\n  -ms-flex-align: $align; // IE 10\n}\n\n@mixin box-direction($direction: normal) {\n// normal|reverse|inherit\n  @include prefixer(box-direction, $direction, webkit moz spec);\n  -ms-flex-direction: $direction; // IE 10\n}\n\n@mixin box-lines($lines: single) {\n// single|multiple\n  @include prefixer(box-lines, $lines, webkit moz spec);\n}\n\n@mixin box-ordinal-group($int: 1) {\n  @include prefixer(box-ordinal-group, $int, webkit moz spec);\n  -ms-flex-order: $int; // IE 10\n}\n\n@mixin box-flex($value: 0.0) {\n  @include prefixer(box-flex, $value, webkit moz spec);\n  -ms-flex: $value; // IE 10\n}\n\n@mixin box-flex-group($int: 1) {\n  @include prefixer(box-flex-group, $int, webkit moz spec);\n}\n\n// CSS3 Flexible Box Model and property defaults\n// Unified attributes for 2009, 2011, and 2012 flavours.\n\n// 2009 - display (box | inline-box)\n// 2011 - display (flexbox | inline-flexbox)\n// 2012 - display (flex | inline-flex)\n@mixin display($value) {\n// flex | inline-flex\n  @if $value == \"flex\" {\n    // 2009\n    display: -webkit-box;\n    display: -moz-box;\n    display: box;\n\n    // 2012\n    display: -webkit-flex;\n    display: -moz-flex;\n    display: -ms-flexbox; // 2011 (IE 10)\n    display: flex;\n  }\n\n  @else if $value == \"inline-flex\" {\n    display: -webkit-inline-box;\n    display: -moz-inline-box;\n    display: inline-box;\n\n    display: -webkit-inline-flex;\n    display: -moz-inline-flex;\n    display: -ms-inline-flexbox;\n    display: inline-flex;\n  }\n\n  @else {\n    display: $value;\n  }\n}\n\n// 2009 - box-flex (integer)\n// 2011 - flex (decimal | width decimal)\n// 2012 - flex (integer integer width)\n@mixin flex($value) {\n\n  // Grab flex-grow for older browsers.\n  $flex-grow: nth($value, 1);\n\n  // 2009\n  @include prefixer(box-flex, $flex-grow, webkit moz spec);\n\n  // 2011 (IE 10), 2012\n  @include prefixer(flex, $value, webkit moz ms spec);\n}\n\n// 2009 - box-orient ( horizontal | vertical | inline-axis | block-axis)\n//      - box-direction (normal | reverse)\n// 2011 - flex-direction (row | row-reverse | column | column-reverse)\n// 2012 - flex-direction (row | row-reverse | column | column-reverse)\n@mixin flex-direction($value: row) {\n\n  // Alt values.\n  $value-2009: $value;\n  $value-2011: $value;\n  $direction: \"normal\";\n\n  @if $value == row {\n    $value-2009: horizontal;\n  }\n\n  @else if $value == \"row-reverse\" {\n    $value-2009: horizontal;\n    $direction: reverse;\n  }\n\n  @else if $value == column {\n    $value-2009: vertical;\n  }\n\n  @else if $value == \"column-reverse\" {\n    $value-2009: vertical;\n    $direction: reverse;\n  }\n\n  // 2009\n  @include prefixer(box-orient, $value-2009, webkit moz spec);\n  @if $direction == \"reverse\" {\n    @include prefixer(box-direction, $direction, webkit moz spec);\n  }\n\n  // 2012\n  @include prefixer(flex-direction, $value, webkit moz spec);\n\n  // 2011 (IE 10)\n  -ms-flex-direction: $value;\n}\n\n// 2009 - box-lines (single | multiple)\n// 2011 - flex-wrap (nowrap | wrap | wrap-reverse)\n// 2012 - flex-wrap (nowrap | wrap | wrap-reverse)\n@mixin flex-wrap($value: nowrap) {\n\n  // Alt values\n  $alt-value: $value;\n  @if $value == nowrap {\n    $alt-value: single;\n  }\n\n  @else if $value == wrap {\n    $alt-value: multiple;\n  }\n\n  @else if $value == \"wrap-reverse\" {\n    $alt-value: multiple;\n  }\n\n  @include prefixer(box-lines, $alt-value, webkit moz spec);\n  @include prefixer(flex-wrap, $value, webkit moz ms spec);\n}\n\n// 2009 - TODO: parse values into flex-direction/flex-wrap\n// 2011 - TODO: parse values into flex-direction/flex-wrap\n// 2012 - flex-flow (flex-direction || flex-wrap)\n@mixin flex-flow($value) {\n  @include prefixer(flex-flow, $value, webkit moz spec);\n}\n\n// 2009 - box-ordinal-group (integer)\n// 2011 - flex-order (integer)\n// 2012 - order (integer)\n@mixin order($int: 0) {\n  // 2009\n  @include prefixer(box-ordinal-group, $int, webkit moz spec);\n\n  // 2012\n  @include prefixer(order, $int, webkit moz spec);\n\n  // 2011 (IE 10)\n  -ms-flex-order: $int;\n}\n\n// 2012 - flex-grow (number)\n@mixin flex-grow($number: 0) {\n  @include prefixer(flex-grow, $number, webkit moz spec);\n  -ms-flex-positive: $number;\n}\n\n// 2012 - flex-shrink (number)\n@mixin flex-shrink($number: 1) {\n  @include prefixer(flex-shrink, $number, webkit moz spec);\n  -ms-flex-negative: $number;\n}\n\n// 2012 - flex-basis (number)\n@mixin flex-basis($width: auto) {\n  @include prefixer(flex-basis, $width, webkit moz spec);\n  -ms-flex-preferred-size: $width;\n}\n\n// 2009 - box-pack (start | end | center | justify)\n// 2011 - flex-pack (start | end | center | justify)\n// 2012 - justify-content (flex-start | flex-end | center | space-between | space-around)\n@mixin justify-content($value: flex-start) {\n\n  // Alt values.\n  $alt-value: $value;\n  @if $value == \"flex-start\" {\n    $alt-value: start;\n  }\n\n  @else if $value == \"flex-end\" {\n    $alt-value: end;\n  }\n\n  @else if $value == \"space-between\" {\n    $alt-value: justify;\n  }\n\n  @else if $value == \"space-around\" {\n    $alt-value: distribute;\n  }\n\n  // 2009\n  @include prefixer(box-pack, $alt-value, webkit moz spec);\n\n  // 2012\n  @include prefixer(justify-content, $value, webkit moz ms o spec);\n\n  // 2011 (IE 10)\n  -ms-flex-pack: $alt-value;\n}\n\n// 2009 - box-align (start | end | center | baseline | stretch)\n// 2011 - flex-align (start | end | center | baseline | stretch)\n// 2012 - align-items (flex-start | flex-end | center | baseline | stretch)\n@mixin align-items($value: stretch) {\n\n  $alt-value: $value;\n\n  @if $value == \"flex-start\" {\n    $alt-value: start;\n  }\n\n  @else if $value == \"flex-end\" {\n    $alt-value: end;\n  }\n\n  // 2009\n  @include prefixer(box-align, $alt-value, webkit moz spec);\n\n  // 2012\n  @include prefixer(align-items, $value, webkit moz ms o spec);\n\n  // 2011 (IE 10)\n  -ms-flex-align: $alt-value;\n}\n\n// 2011 - flex-item-align (auto | start | end | center | baseline | stretch)\n// 2012 - align-self (auto | flex-start | flex-end | center | baseline | stretch)\n@mixin align-self($value: auto) {\n\n  $value-2011: $value;\n  @if $value == \"flex-start\" {\n    $value-2011: start;\n  }\n\n  @else if $value == \"flex-end\" {\n    $value-2011: end;\n  }\n\n  // 2012\n  @include prefixer(align-self, $value, webkit moz spec);\n\n  // 2011 (IE 10)\n  -ms-flex-item-align: $value-2011;\n}\n\n// 2011 - flex-line-pack (start | end | center | justify | distribute | stretch)\n// 2012 - align-content (flex-start | flex-end | center | space-between | space-around | stretch)\n@mixin align-content($value: stretch) {\n\n  $value-2011: $value;\n  @if $value == \"flex-start\" {\n    $value-2011: start;\n  }\n\n  @else if $value == \"flex-end\" {\n    $value-2011: end;\n  }\n\n  @else if $value == \"space-between\" {\n    $value-2011: justify;\n  }\n\n  @else if $value == \"space-around\" {\n    $value-2011: distribute;\n  }\n\n  // 2012\n  @include prefixer(align-content, $value, webkit moz spec);\n\n  // 2011 (IE 10)\n  -ms-flex-line-pack: $value-2011;\n}\n",
		"@mixin font-face(\n  $font-family,\n  $file-path,\n  $weight: normal,\n  $style: normal,\n  $asset-pipeline: $asset-pipeline,\n  $file-formats: eot woff2 woff ttf svg) {\n\n  $font-url-prefix: font-url-prefixer($asset-pipeline);\n\n  @font-face {\n    font-family: $font-family;\n    font-style: $style;\n    font-weight: $weight;\n\n    src: font-source-declaration(\n      $font-family,\n      $file-path,\n      $asset-pipeline,\n      $file-formats,\n      $font-url-prefix\n    );\n  }\n}\n",
		"// Font feature settings mixin and property default.\n// Examples: @include font-feature-settings(\"liga\");\n//           @include font-feature-settings(\"lnum\" false);\n//           @include font-feature-settings(\"pnum\" 1, \"kern\" 0);\n//           @include font-feature-settings(\"ss01\", \"ss02\");\n\n@mixin font-feature-settings($settings...) {\n  @if length($settings) == 0 { $settings: none; }\n  @include prefixer(font-feature-settings, $settings, webkit moz ms spec);\n}",
		"// HiDPI mixin. Default value set to 1.3 to target Google Nexus 7 (http://bjango.com/articles/min-device-pixel-ratio/)\n@mixin hidpi($ratio: 1.3) {\n  @media only screen and (-webkit-min-device-pixel-ratio: $ratio),\n  only screen and (min--moz-device-pixel-ratio: $ratio),\n  only screen and (-o-min-device-pixel-ratio: #{$ratio}/1),\n  only screen and (min-resolution: round($ratio * 96dpi)),\n  only screen and (min-resolution: $ratio * 1dppx) {\n    @content;\n  }\n}\n",
		"@mixin hyphens($hyphenation: none) {\n// none | manual | auto\n  @include prefixer(hyphens, $hyphenation, webkit moz ms spec);\n}",
		"@mixin image-rendering ($mode:auto) {\n\n  @if ($mode == crisp-edges) {\n      -ms-interpolation-mode: nearest-neighbor; // IE8+\n      image-rendering: -moz-crisp-edges;\n      image-rendering: -o-crisp-edges;\n      image-rendering: -webkit-optimize-contrast;\n      image-rendering: crisp-edges;\n  }\n\n  @else {\n      image-rendering: $mode;\n  }\n}\n",
		"// Adds keyframes blocks for supported prefixes, removing redundant prefixes in the block's content\n@mixin keyframes($name) {\n  $original-prefix-for-webkit:    $prefix-for-webkit;\n  $original-prefix-for-mozilla:   $prefix-for-mozilla;\n  $original-prefix-for-microsoft: $prefix-for-microsoft;\n  $original-prefix-for-opera:     $prefix-for-opera;\n  $original-prefix-for-spec:      $prefix-for-spec;\n\n  @if $original-prefix-for-webkit {\n    @include disable-prefix-for-all();\n    $prefix-for-webkit: true !global;\n    @-webkit-keyframes #{$name} {\n      @content;\n    }\n  }\n  @if $original-prefix-for-mozilla {\n    @include disable-prefix-for-all();\n    $prefix-for-mozilla: true !global;\n    @-moz-keyframes #{$name} {\n      @content;\n    }\n  }\n\n  $prefix-for-webkit:    $original-prefix-for-webkit    !global;\n  $prefix-for-mozilla:   $original-prefix-for-mozilla   !global;\n  $prefix-for-microsoft: $original-prefix-for-microsoft !global;\n  $prefix-for-opera:     $original-prefix-for-opera     !global;\n  $prefix-for-spec:      $original-prefix-for-spec      !global;\n\n  @if $original-prefix-for-spec {\n    @keyframes #{$name} {\n      @content;\n    }\n  }\n}\n",
		"@mixin linear-gradient($pos, $G1, $G2: null,\n                       $G3: null, $G4: null,\n                       $G5: null, $G6: null,\n                       $G7: null, $G8: null,\n                       $G9: null, $G10: null,\n                       $fallback: null) {\n  // Detect what type of value exists in $pos\n  $pos-type: type-of(nth($pos, 1));\n  $pos-spec: null;\n  $pos-degree: null;\n\n  // If $pos is missing from mixin, reassign vars and add default position\n  @if ($pos-type == color) or (nth($pos, 1) == \"transparent\")  {\n    $G10: $G9; $G9: $G8; $G8: $G7; $G7: $G6; $G6: $G5;\n     $G5: $G4; $G4: $G3; $G3: $G2; $G2: $G1; $G1: $pos;\n     $pos: null;\n  }\n\n  @if $pos {\n    $positions: _linear-positions-parser($pos);\n    $pos-degree: nth($positions, 1);\n    $pos-spec:   nth($positions, 2);\n  }\n\n  $full: $G1, $G2, $G3, $G4, $G5, $G6, $G7, $G8, $G9, $G10;\n\n  // Set $G1 as the default fallback color\n  $fallback-color: nth($G1, 1);\n\n  // If $fallback is a color use that color as the fallback color\n  @if (type-of($fallback) == color) or ($fallback == \"transparent\") {\n    $fallback-color: $fallback;\n  }\n\n  background-color: $fallback-color;\n  background-image: -webkit-linear-gradient($pos-degree $full); // Safari 5.1+, Chrome\n  background-image: unquote(\"linear-gradient(#{$pos-spec}#{$full})\");\n}\n",
		"@mixin perspective($depth: none) {\n  // none | <length>\n  @include prefixer(perspective, $depth, webkit moz spec);\n}\n\n@mixin perspective-origin($value: 50% 50%) {\n  @include prefixer(perspective-origin, $value, webkit moz spec);\n}\n",
		"@mixin placeholder {\n  $placeholders: \":-webkit-input\" \":-moz\" \"-moz\" \"-ms-input\";\n  @each $placeholder in $placeholders {\n    &:#{$placeholder}-placeholder {\n      @content;\n    }\n  }\n}\n",
		"// Requires Sass 3.1+\n@mixin radial-gradient($G1,        $G2,\n                       $G3: null, $G4: null,\n                       $G5: null, $G6: null,\n                       $G7: null, $G8: null,\n                       $G9: null, $G10: null,\n                       $pos: null,\n                       $shape-size: null,\n                       $fallback: null) {\n\n  $data: _radial-arg-parser($G1, $G2, $pos, $shape-size);\n  $G1:  nth($data, 1);\n  $G2:  nth($data, 2);\n  $pos: nth($data, 3);\n  $shape-size: nth($data, 4);\n\n  $full: $G1, $G2, $G3, $G4, $G5, $G6, $G7, $G8, $G9, $G10;\n\n  // Strip deprecated cover/contain for spec\n  $shape-size-spec: _shape-size-stripper($shape-size);\n\n  // Set $G1 as the default fallback color\n  $first-color: nth($full, 1);\n  $fallback-color: nth($first-color, 1);\n\n  @if (type-of($fallback) == color) or ($fallback == \"transparent\") {\n    $fallback-color: $fallback;\n  }\n\n  // Add Commas and spaces\n  $shape-size: if($shape-size, '#{$shape-size}, ', null);\n  $pos:        if($pos, '#{$pos}, ', null);\n  $pos-spec:   if($pos, 'at #{$pos}', null);\n  $shape-size-spec: if(($shape-size-spec != ' ') and ($pos == null), '#{$shape-size-spec}, ', '#{$shape-size-spec} ');\n\n  background-color:  $fallback-color;\n  background-image: -webkit-radial-gradient(unquote(#{$pos}#{$shape-size}#{$full}));\n  background-image: unquote(\"radial-gradient(#{$shape-size-spec}#{$pos-spec}#{$full})\");\n}\n",
		"@mixin selection {\r\n  $before-colons: \"\";\r\n\r\n  @if & {\r\n    $before-colons: \"&\"\r\n  }\r\n\r\n  #{$before-colons}::selection {\r\n    @content;\r\n  }\r\n  #{$before-colons}::-moz-selection {\r\n    @content;\r\n  }\r\n}",
		"@mixin text-decoration($value) {\n// <text-decoration-line> || <text-decoration-style> || <text-decoration-color>\n  @include prefixer(text-decoration, $value, moz);\n}\n\n@mixin text-decoration-line($line: none) {\n// none || underline || overline || line-through\n  @include prefixer(text-decoration-line, $line, moz);\n}\n\n@mixin text-decoration-style($style: solid) {\n// solid || double || dotted || dashed || wavy\n  @include prefixer(text-decoration-style, $style, moz webkit);\n}\n\n@mixin text-decoration-color($color: currentColor) {\n// currentColor || <color>\n  @include prefixer(text-decoration-color, $color, moz);\n}\n",
		"@mixin transform($property: none) {\n//  none | <transform-function>\n  @include prefixer(transform, $property, webkit moz ms o spec);\n}\n\n@mixin transform-origin($axes: 50%) {\n// x-axis - left | center | right  | length | %\n// y-axis - top  | center | bottom | length | %\n// z-axis -                          length\n  @include prefixer(transform-origin, $axes, webkit moz ms o spec);\n}\n\n@mixin transform-style ($style: flat) {\n  @include prefixer(transform-style, $style, webkit moz ms o spec);\n}\n",
		"// Shorthand mixin. Supports multiple parentheses-deliminated values for each variable.\n// Example: @include transition (all 2s ease-in-out);\n//          @include transition (opacity 1s ease-in 2s, width 2s ease-out);\n//          @include transition-property (transform, opacity);\n\n@mixin transition ($properties...) {\n  // Fix for vendor-prefix transform property\n  $needs-prefixes: false;\n  $webkit: ();\n  $moz: ();\n  $spec: ();\n\n  // Create lists for vendor-prefixed transform\n  @each $list in $properties {\n    @if nth($list, 1) == \"transform\" {\n      $needs-prefixes: true;\n      $list1: -webkit-transform;\n      $list2: -moz-transform;\n      $list3: ();\n\n      @each $var in $list {\n        $list3: join($list3, $var);\n\n        @if $var != \"transform\" {\n          $list1: join($list1, $var);\n          $list2: join($list2, $var);\n        }\n      }\n\n      $webkit: append($webkit, $list1);\n         $moz: append($moz,    $list2);\n        $spec: append($spec,   $list3);\n    }\n\n    // Create lists for non-prefixed transition properties\n    @else {\n      $webkit:  append($webkit, $list, comma);\n      $moz:     append($moz,    $list, comma);\n      $spec:    append($spec,   $list, comma);\n    }\n  }\n\n  @if $needs-prefixes {\n    -webkit-transition: $webkit;\n       -moz-transition: $moz;\n            transition: $spec;\n  }\n  @else {\n    @if length($properties) >= 1 {\n      @include prefixer(transition, $properties, webkit moz spec);\n    }\n\n    @else {\n      $properties: all 0.15s ease-out 0s;\n      @include prefixer(transition, $properties, webkit moz spec);\n    }\n  }\n}\n\n@mixin transition-property ($properties...) {\n   -webkit-transition-property: transition-property-names($properties, 'webkit');\n      -moz-transition-property: transition-property-names($properties, 'moz');\n           transition-property: transition-property-names($properties, false);\n}\n\n@mixin transition-duration ($times...) {\n  @include prefixer(transition-duration, $times, webkit moz spec);\n}\n\n@mixin transition-timing-function ($motions...) {\n// ease | linear | ease-in | ease-out | ease-in-out | cubic-bezier()\n  @include prefixer(transition-timing-function, $motions, webkit moz spec);\n}\n\n@mixin transition-delay ($times...) {\n  @include prefixer(transition-delay, $times, webkit moz spec);\n}\n",
		"@mixin user-select($arg: none) {\n  @include prefixer(user-select, $arg, webkit moz ms spec);\n}\n",
		"// The clearfix mixin provides an easy way to contain floats\n//\n// Example usage:\n// .wrapper {\n//   @include clearfix;\n// }\n\n@mixin clearfix {\n  &::after {\n    clear: both;\n    content: \"\";\n    display: table;\n  }\n}\n\n// Acknowledgements:\n// Thierry Koblentz, cssmojo\n// http://goo.gl/AQWvyH\n",
		"// directional-property mixins are shorthands\n// for writing properties like the following\n//\n// @include margin(null 0 10px);\n// ------\n// margin-right: 0;\n// margin-bottom: 10px;\n// margin-left: 0;\n//\n// - or -\n//\n// @include border-style(dotted null);\n// ------\n// border-top-style: dotted;\n// border-bottom-style: dotted;\n//\n// ------\n//\n// Note: You can also use false instead of null\n\n@function collapse-directionals($vals) {\n  $output: null;\n\n  $A: nth( $vals, 1 );\n  $B: if( length($vals) < 2, $A, nth($vals, 2));\n  $C: if( length($vals) < 3, $A, nth($vals, 3));\n  $D: if( length($vals) < 2, $A, nth($vals, if( length($vals) < 4, 2, 4) ));\n\n  @if $A == 0 { $A: 0 }\n  @if $B == 0 { $B: 0 }\n  @if $C == 0 { $C: 0 }\n  @if $D == 0 { $D: 0 }\n\n  @if $A == $B and $A == $C and $A == $D { $output: $A          }\n  @else if $A == $C and $B == $D         { $output: $A $B       }\n  @else if $B == $D                      { $output: $A $B $C    }\n  @else                                  { $output: $A $B $C $D }\n\n  @return $output;\n}\n\n@function contains-falsy($list) {\n  @each $item in $list {\n    @if not $item {\n      @return true;\n    }\n  }\n\n  @return false;\n}\n\n@mixin directional-property($pre, $suf, $vals) {\n  // Property Names\n  $top:    $pre + \"-top\"    + if($suf, \"-#{$suf}\", \"\");\n  $bottom: $pre + \"-bottom\" + if($suf, \"-#{$suf}\", \"\");\n  $left:   $pre + \"-left\"   + if($suf, \"-#{$suf}\", \"\");\n  $right:  $pre + \"-right\"  + if($suf, \"-#{$suf}\", \"\");\n  $all:    $pre +             if($suf, \"-#{$suf}\", \"\");\n\n  $vals: collapse-directionals($vals);\n\n  @if contains-falsy($vals) {\n    @if nth($vals, 1) { #{$top}: nth($vals, 1); }\n\n    @if length($vals) == 1 {\n      @if nth($vals, 1) { #{$right}: nth($vals, 1); }\n    } @else {\n      @if nth($vals, 2) { #{$right}: nth($vals, 2); }\n    }\n\n    // prop: top/bottom right/left\n    @if length($vals) == 2 {\n      @if nth($vals, 1) { #{$bottom}: nth($vals, 1); }\n      @if nth($vals, 2) { #{$left}:   nth($vals, 2); }\n\n    // prop: top right/left bottom\n    } @else if length($vals) == 3 {\n      @if nth($vals, 3) { #{$bottom}: nth($vals, 3); }\n      @if nth($vals, 2) { #{$left}:   nth($vals, 2); }\n\n    // prop: top right bottom left\n    } @else if length($vals) == 4 {\n      @if nth($vals, 3) { #{$bottom}: nth($vals, 3); }\n      @if nth($vals, 4) { #{$left}:   nth($vals, 4); }\n    }\n\n  // prop: top/right/bottom/left\n  } @else {\n    #{$all}: $vals;\n  }\n}\n\n@mixin margin($vals...) {\n  @include directional-property(margin, false, $vals...);\n}\n\n@mixin padding($vals...) {\n  @include directional-property(padding, false, $vals...);\n}\n\n@mixin border-style($vals...) {\n  @include directional-property(border, style, $vals...);\n}\n\n@mixin border-color($vals...) {\n  @include directional-property(border, color, $vals...);\n}\n\n@mixin border-width($vals...) {\n  @include directional-property(border, width, $vals...);\n}\n",
		"@mixin ellipsis($width: 100%) {\n  display: inline-block;\n  max-width: $width;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  word-wrap: normal;\n}\n",
		"$georgia: Georgia, Cambria, \"Times New Roman\", Times, serif;\n$helvetica: \"Helvetica Neue\", Helvetica, Roboto, Arial, sans-serif;\n$lucida-grande: \"Lucida Grande\", Tahoma, Verdana, Arial, sans-serif;\n$monospace: \"Bitstream Vera Sans Mono\", Consolas, Courier, monospace;\n$verdana: Verdana, Geneva, sans-serif;\n",
		"@mixin hide-text($height: 1em) {\n  height: $height;\n  line-height: 1.5;\n  overflow: hidden;\n\n  &::before {\n    content: \"\";\n    display: block;\n    width: 0;\n    height: 100%;\n  }\n}\n",
		"//************************************************************************//\n// Generate a variable ($all-text-inputs) with a list of all html5\n// input types that have a text-based input, excluding textarea.\n// http://diveintohtml5.org/forms.html\n//************************************************************************//\n$inputs-list: 'input[type=\"email\"]',\n              'input[type=\"number\"]',\n              'input[type=\"password\"]',\n              'input[type=\"search\"]',\n              'input[type=\"tel\"]',\n              'input[type=\"text\"]',\n              'input[type=\"url\"]',\n\n              // Webkit & Gecko may change the display of these in the future\n              'input[type=\"color\"]',\n              'input[type=\"date\"]',\n              'input[type=\"datetime\"]',\n              'input[type=\"datetime-local\"]',\n              'input[type=\"month\"]',\n              'input[type=\"time\"]',\n              'input[type=\"week\"]';\n\n// Bare inputs\n//************************************************************************//\n$all-text-inputs: assign-inputs($inputs-list);\n\n// Hover Pseudo-class\n//************************************************************************//\n$all-text-inputs-hover: assign-inputs($inputs-list, hover);\n\n// Focus Pseudo-class\n//************************************************************************//\n$all-text-inputs-focus: assign-inputs($inputs-list, focus);\n\n// Active Pseudo-class\n//************************************************************************//\n$all-text-inputs-active: assign-inputs($inputs-list, active);\n\n\n// You must use interpolation on the variable:\n// #{$all-text-inputs}\n// #{$all-text-inputs-hover}\n// #{$all-text-inputs-focus}\n// #{$all-text-inputs-active}\n\n// Example\n//************************************************************************//\n//   #{$all-text-inputs}, textarea {\n//     border: 1px solid red;\n//   }\n\n\n\n//************************************************************************//\n// Generate a variable ($all-button-inputs) with a list of all html5\n// input types that have a button-based input, excluding button.\n//************************************************************************//\n$inputs-button-list: 'input[type=\"button\"]',\n                     'input[type=\"reset\"]',\n                     'input[type=\"submit\"]';\n\n// Bare inputs\n//************************************************************************//\n$all-button-inputs: assign-inputs($inputs-button-list);\n\n// Hover Pseudo-class\n//************************************************************************//\n$all-button-inputs-hover: assign-inputs($inputs-button-list, hover);\n\n// Focus Pseudo-class\n//************************************************************************//\n$all-button-inputs-focus: assign-inputs($inputs-button-list, focus);\n\n// Active Pseudo-class\n//************************************************************************//\n$all-button-inputs-active: assign-inputs($inputs-button-list, active);\n\n\n\n// You must use interpolation on the variable:\n// #{$all-button-inputs}\n// #{$all-button-inputs-hover}\n// #{$all-button-inputs-focus}\n// #{$all-button-inputs-active}\n\n// Example\n//************************************************************************//\n//   #{$all-button-inputs}, button {\n//     border: 1px solid red;\n//   }\n",
		"// Set element positioning in a single statement\n\n@mixin position($position: relative, $coordinates: null null null null) {\n\n  @if type-of($position) == list {\n    $coordinates: $position;\n    $position: relative;\n  }\n\n  $coordinates: unpack($coordinates);\n\n  $offsets: (\n    top:    nth($coordinates, 1),\n    right:  nth($coordinates, 2),\n    bottom: nth($coordinates, 3),\n    left:   nth($coordinates, 4)\n  );\n\n  position: $position;\n\n  @each $offset, $value in $offsets {\n    @if is-length($value) {\n      #{$offset}: $value;\n    }\n  }\n}\n",
		"//************************************************************************//\n// Example: @include prefixer(border-radius, $radii, webkit ms spec);\n//************************************************************************//\n// Variables located in /settings/_prefixer.scss\n\n@mixin prefixer ($property, $value, $prefixes) {\n  @each $prefix in $prefixes {\n    @if $prefix == webkit {\n      @if $prefix-for-webkit {\n        -webkit-#{$property}: $value;\n      }\n    }\n    @else if $prefix == moz {\n      @if $prefix-for-mozilla {\n        -moz-#{$property}: $value;\n      }\n    }\n    @else if $prefix == ms {\n      @if $prefix-for-microsoft {\n        -ms-#{$property}: $value;\n      }\n    }\n    @else if $prefix == o {\n      @if $prefix-for-opera {\n        -o-#{$property}: $value;\n      }\n    }\n    @else if $prefix == spec {\n      @if $prefix-for-spec {\n        #{$property}: $value;\n      }\n    }\n    @else  {\n      @warn \"Unrecognized prefix: #{$prefix}\";\n    }\n  }\n}\n\n@mixin disable-prefix-for-all() {\n  $prefix-for-webkit:    false !global;\n  $prefix-for-mozilla:   false !global;\n  $prefix-for-microsoft: false !global;\n  $prefix-for-opera:     false !global;\n  $prefix-for-spec:      false !global;\n}\n",
		"@mixin retina-image($filename, $background-size, $extension: png, $retina-filename: null, $retina-suffix: _2x, $asset-pipeline: $asset-pipeline) {\n  @if $asset-pipeline {\n    background-image: image-url(\"#{$filename}.#{$extension}\");\n  }\n  @else {\n    background-image:       url(\"#{$filename}.#{$extension}\");\n  }\n\n  @include hidpi {\n    @if $asset-pipeline {\n      @if $retina-filename {\n        background-image: image-url(\"#{$retina-filename}.#{$extension}\");\n      }\n      @else {\n        background-image: image-url(\"#{$filename}#{$retina-suffix}.#{$extension}\");\n      }\n    }\n\n    @else {\n      @if $retina-filename {\n        background-image: url(\"#{$retina-filename}.#{$extension}\");\n      }\n      @else {\n        background-image: url(\"#{$filename}#{$retina-suffix}.#{$extension}\");\n      }\n    }\n\n    background-size: $background-size;\n\n  }\n}\n",
		"// Set `width` and `height` in a single statement\n\n@mixin size($value) {\n  $width: nth($value, 1);\n  $height: $width;\n\n  @if length($value) > 1 {\n    $height: nth($value, 2);\n  }\n\n  @if is-size($height) {\n    height: $height;\n  }\n\n  @else {\n    @warn \"`#{$height}` is not a valid length for the `$height` parameter in the `size` mixin.\";\n  }\n\n  @if is-size($width) {\n    width: $width;\n  }\n\n  @else {\n    @warn \"`#{$width}` is not a valid length for the `$width` parameter in the `size` mixin.\";\n  }\n}\n",
		"// CSS cubic-bezier timing functions. Timing functions courtesy of jquery.easie (github.com/jaukia/easie)\n// Timing functions are the same as demo'ed here: http://jqueryui.com/resources/demos/effect/easing.html\n\n// EASE IN\n$ease-in-quad:      cubic-bezier(0.550,  0.085, 0.680, 0.530);\n$ease-in-cubic:     cubic-bezier(0.550,  0.055, 0.675, 0.190);\n$ease-in-quart:     cubic-bezier(0.895,  0.030, 0.685, 0.220);\n$ease-in-quint:     cubic-bezier(0.755,  0.050, 0.855, 0.060);\n$ease-in-sine:      cubic-bezier(0.470,  0.000, 0.745, 0.715);\n$ease-in-expo:      cubic-bezier(0.950,  0.050, 0.795, 0.035);\n$ease-in-circ:      cubic-bezier(0.600,  0.040, 0.980, 0.335);\n$ease-in-back:      cubic-bezier(0.600, -0.280, 0.735, 0.045);\n\n// EASE OUT\n$ease-out-quad:     cubic-bezier(0.250,  0.460, 0.450, 0.940);\n$ease-out-cubic:    cubic-bezier(0.215,  0.610, 0.355, 1.000);\n$ease-out-quart:    cubic-bezier(0.165,  0.840, 0.440, 1.000);\n$ease-out-quint:    cubic-bezier(0.230,  1.000, 0.320, 1.000);\n$ease-out-sine:     cubic-bezier(0.390,  0.575, 0.565, 1.000);\n$ease-out-expo:     cubic-bezier(0.190,  1.000, 0.220, 1.000);\n$ease-out-circ:     cubic-bezier(0.075,  0.820, 0.165, 1.000);\n$ease-out-back:     cubic-bezier(0.175,  0.885, 0.320, 1.275);\n\n// EASE IN OUT\n$ease-in-out-quad:  cubic-bezier(0.455,  0.030, 0.515, 0.955);\n$ease-in-out-cubic: cubic-bezier(0.645,  0.045, 0.355, 1.000);\n$ease-in-out-quart: cubic-bezier(0.770,  0.000, 0.175, 1.000);\n$ease-in-out-quint: cubic-bezier(0.860,  0.000, 0.070, 1.000);\n$ease-in-out-sine:  cubic-bezier(0.445,  0.050, 0.550, 0.950);\n$ease-in-out-expo:  cubic-bezier(1.000,  0.000, 0.000, 1.000);\n$ease-in-out-circ:  cubic-bezier(0.785,  0.135, 0.150, 0.860);\n$ease-in-out-back:  cubic-bezier(0.680, -0.550, 0.265, 1.550);\n",
		"@mixin triangle ($size, $color, $direction) {\n  height: 0;\n  width: 0;\n\n  $width: nth($size, 1);\n  $height: nth($size, length($size));\n\n  $foreground-color: nth($color, 1);\n  $background-color: if(length($color) == 2, nth($color, 2), transparent);\n\n  @if ($direction == up) or ($direction == down) or ($direction == right) or ($direction == left) {\n\n    $width: $width / 2;\n    $height: if(length($size) > 1, $height, $height/2);\n\n    @if $direction == up {\n      border-left: $width solid $background-color;\n      border-right: $width solid $background-color;\n      border-bottom: $height solid $foreground-color;\n\n    } @else if $direction == right {\n      border-top: $width solid $background-color;\n      border-bottom: $width solid $background-color;\n      border-left: $height solid $foreground-color;\n\n    } @else if $direction == down {\n      border-left: $width solid $background-color;\n      border-right: $width solid $background-color;\n      border-top: $height solid $foreground-color;\n\n    } @else if $direction == left {\n      border-top: $width solid $background-color;\n      border-bottom: $width solid $background-color;\n      border-right: $height solid $foreground-color;\n    }\n  }\n\n  @else if ($direction == up-right) or ($direction == up-left) {\n    border-top: $height solid $foreground-color;\n\n    @if $direction == up-right {\n      border-left:  $width solid $background-color;\n\n    } @else if $direction == up-left {\n      border-right: $width solid $background-color;\n    }\n  }\n\n  @else if ($direction == down-right) or ($direction == down-left) {\n    border-bottom: $height solid $foreground-color;\n\n    @if $direction == down-right {\n      border-left:  $width solid $background-color;\n\n    } @else if $direction == down-left {\n      border-right: $width solid $background-color;\n    }\n  }\n\n  @else if ($direction == inset-up) {\n    border-width: $height $width;\n    border-style: solid;\n    border-color: $background-color $background-color $foreground-color;\n  }\n\n  @else if ($direction == inset-down) {\n    border-width: $height $width;\n    border-style: solid;\n    border-color: $foreground-color $background-color $background-color;\n  }\n\n  @else if ($direction == inset-right) {\n    border-width: $width $height;\n    border-style: solid;\n    border-color: $background-color $background-color $background-color $foreground-color;\n  }\n\n  @else if ($direction == inset-left) {\n    border-width: $width $height;\n    border-style: solid;\n    border-color: $background-color $foreground-color $background-color $background-color;\n  }\n}\n",
		"@mixin word-wrap($wrap: break-word) {\n  overflow-wrap: $wrap;\n  word-wrap: $wrap;\n\n  @if $wrap == break-word {\n    word-break: break-all;\n  } @else {\n    word-break: $wrap;\n  }\n}\n",
		"// The following features have been deprecated and will be removed in the next MAJOR version release\n\n@mixin inline-block {\n  display: inline-block;\n\n  @warn \"The inline-block mixin is deprecated and will be removed in the next major version release\";\n}\n\n@mixin button ($style: simple, $base-color: #4294f0, $text-size: inherit, $padding: 7px 18px) {\n\n  @if type-of($style) == string and type-of($base-color) == color {\n    @include buttonstyle($style, $base-color, $text-size, $padding);\n  }\n\n  @if type-of($style) == string and type-of($base-color) == number {\n    $padding: $text-size;\n    $text-size: $base-color;\n    $base-color: #4294f0;\n\n    @if $padding == inherit {\n      $padding: 7px 18px;\n    }\n\n    @include buttonstyle($style, $base-color, $text-size, $padding);\n  }\n\n  @if type-of($style) == color and type-of($base-color) == color {\n    $base-color: $style;\n    $style: simple;\n    @include buttonstyle($style, $base-color, $text-size, $padding);\n  }\n\n  @if type-of($style) == color and type-of($base-color) == number {\n    $padding: $text-size;\n    $text-size: $base-color;\n    $base-color: $style;\n    $style: simple;\n\n    @if $padding == inherit {\n      $padding: 7px 18px;\n    }\n\n    @include buttonstyle($style, $base-color, $text-size, $padding);\n  }\n\n  @if type-of($style) == number {\n    $padding: $base-color;\n    $text-size: $style;\n    $base-color: #4294f0;\n    $style: simple;\n\n    @if $padding == #4294f0 {\n      $padding: 7px 18px;\n    }\n\n    @include buttonstyle($style, $base-color, $text-size, $padding);\n  }\n\n  &:disabled {\n    opacity: 0.5;\n    cursor: not-allowed;\n  }\n\n  @warn \"The button mixin is deprecated and will be removed in the next major version release\";\n}\n\n// Selector Style Button\n@mixin buttonstyle($type, $b-color, $t-size, $pad) {\n  // Grayscale button\n  @if $type == simple and $b-color == grayscale($b-color) {\n    @include simple($b-color, true, $t-size, $pad);\n  }\n\n  @if $type == shiny and $b-color == grayscale($b-color) {\n    @include shiny($b-color, true, $t-size, $pad);\n  }\n\n  @if $type == pill and $b-color == grayscale($b-color) {\n    @include pill($b-color, true, $t-size, $pad);\n  }\n\n  @if $type == flat and $b-color == grayscale($b-color) {\n    @include flat($b-color, true, $t-size, $pad);\n  }\n\n  // Colored button\n  @if $type == simple {\n    @include simple($b-color, false, $t-size, $pad);\n  }\n\n  @else if $type == shiny {\n    @include shiny($b-color, false, $t-size, $pad);\n  }\n\n  @else if $type == pill {\n    @include pill($b-color, false, $t-size, $pad);\n  }\n\n  @else if $type == flat {\n    @include flat($b-color, false, $t-size, $pad);\n  }\n}\n\n// Simple Button\n@mixin simple($base-color, $grayscale: false, $textsize: inherit, $padding: 7px 18px) {\n  $color:         hsl(0, 0, 100%);\n  $border:        adjust-color($base-color, $saturation:  9%,  $lightness: -14%);\n  $inset-shadow:  adjust-color($base-color, $saturation: -8%,  $lightness:  15%);\n  $stop-gradient: adjust-color($base-color, $saturation:  9%,  $lightness: -11%);\n  $text-shadow:   adjust-color($base-color, $saturation:  15%, $lightness: -18%);\n\n  @if is-light($base-color) {\n    $color:       hsl(0, 0, 20%);\n    $text-shadow: adjust-color($base-color, $saturation: 10%, $lightness: 4%);\n  }\n\n  @if $grayscale == true {\n    $border:        grayscale($border);\n    $inset-shadow:  grayscale($inset-shadow);\n    $stop-gradient: grayscale($stop-gradient);\n    $text-shadow:   grayscale($text-shadow);\n  }\n\n  border: 1px solid $border;\n  border-radius: 3px;\n  box-shadow: inset 0 1px 0 0 $inset-shadow;\n  color: $color;\n  display: inline-block;\n  font-size: $textsize;\n  font-weight: bold;\n  @include linear-gradient ($base-color, $stop-gradient);\n  padding: $padding;\n  text-decoration: none;\n  text-shadow: 0 1px 0 $text-shadow;\n  background-clip: padding-box;\n\n  &:hover:not(:disabled) {\n    $base-color-hover:    adjust-color($base-color, $saturation: -4%, $lightness: -5%);\n    $inset-shadow-hover:  adjust-color($base-color, $saturation: -7%, $lightness:  5%);\n    $stop-gradient-hover: adjust-color($base-color, $saturation:  8%, $lightness: -14%);\n\n    @if $grayscale == true {\n      $base-color-hover:    grayscale($base-color-hover);\n      $inset-shadow-hover:  grayscale($inset-shadow-hover);\n      $stop-gradient-hover: grayscale($stop-gradient-hover);\n    }\n\n    box-shadow: inset 0 1px 0 0 $inset-shadow-hover;\n    cursor: pointer;\n    @include linear-gradient ($base-color-hover, $stop-gradient-hover);\n  }\n\n  &:active:not(:disabled),\n  &:focus:not(:disabled) {\n    $border-active:       adjust-color($base-color, $saturation: 9%, $lightness: -14%);\n    $inset-shadow-active: adjust-color($base-color, $saturation: 7%, $lightness: -17%);\n\n    @if $grayscale == true {\n      $border-active:       grayscale($border-active);\n      $inset-shadow-active: grayscale($inset-shadow-active);\n    }\n\n    border: 1px solid $border-active;\n    box-shadow: inset 0 0 8px 4px $inset-shadow-active, inset 0 0 8px 4px $inset-shadow-active;\n  }\n}\n\n// Shiny Button\n@mixin shiny($base-color, $grayscale: false, $textsize: inherit, $padding: 7px 18px) {\n  $color:         hsl(0, 0, 100%);\n  $border:        adjust-color($base-color, $red: -117, $green: -111, $blue: -81);\n  $border-bottom: adjust-color($base-color, $red: -126, $green: -127, $blue: -122);\n  $fourth-stop:   adjust-color($base-color, $red: -79,  $green: -70,  $blue: -46);\n  $inset-shadow:  adjust-color($base-color, $red:  37,  $green:  29,  $blue:  12);\n  $second-stop:   adjust-color($base-color, $red: -56,  $green: -50,  $blue: -33);\n  $text-shadow:   adjust-color($base-color, $red: -140, $green: -141, $blue: -114);\n  $third-stop:    adjust-color($base-color, $red: -86,  $green: -75,  $blue: -48);\n\n  @if is-light($base-color) {\n    $color:       hsl(0, 0, 20%);\n    $text-shadow: adjust-color($base-color, $saturation: 10%, $lightness: 4%);\n  }\n\n  @if $grayscale == true {\n    $border:        grayscale($border);\n    $border-bottom: grayscale($border-bottom);\n    $fourth-stop:   grayscale($fourth-stop);\n    $inset-shadow:  grayscale($inset-shadow);\n    $second-stop:   grayscale($second-stop);\n    $text-shadow:   grayscale($text-shadow);\n    $third-stop:    grayscale($third-stop);\n  }\n\n  border: 1px solid $border;\n  border-bottom: 1px solid $border-bottom;\n  border-radius: 5px;\n  box-shadow: inset 0 1px 0 0 $inset-shadow;\n  color: $color;\n  display: inline-block;\n  font-size: $textsize;\n  font-weight: bold;\n  @include linear-gradient(top, $base-color 0%, $second-stop 50%, $third-stop 50%, $fourth-stop 100%);\n  padding: $padding;\n  text-align: center;\n  text-decoration: none;\n  text-shadow: 0 -1px 1px $text-shadow;\n\n  &:hover:not(:disabled) {\n    $first-stop-hover:  adjust-color($base-color, $red: -13, $green: -15, $blue: -18);\n    $second-stop-hover: adjust-color($base-color, $red: -66, $green: -62, $blue: -51);\n    $third-stop-hover:  adjust-color($base-color, $red: -93, $green: -85, $blue: -66);\n    $fourth-stop-hover: adjust-color($base-color, $red: -86, $green: -80, $blue: -63);\n\n    @if $grayscale == true {\n      $first-stop-hover:  grayscale($first-stop-hover);\n      $second-stop-hover: grayscale($second-stop-hover);\n      $third-stop-hover:  grayscale($third-stop-hover);\n      $fourth-stop-hover: grayscale($fourth-stop-hover);\n    }\n\n    cursor: pointer;\n    @include linear-gradient(top, $first-stop-hover  0%,\n                                  $second-stop-hover 50%,\n                                  $third-stop-hover  50%,\n                                  $fourth-stop-hover 100%);\n  }\n\n  &:active:not(:disabled),\n  &:focus:not(:disabled) {\n    $inset-shadow-active: adjust-color($base-color, $red: -111, $green: -116, $blue: -122);\n\n    @if $grayscale == true {\n      $inset-shadow-active: grayscale($inset-shadow-active);\n    }\n\n    box-shadow: inset 0 0 20px 0 $inset-shadow-active;\n  }\n}\n\n// Pill Button\n@mixin pill($base-color, $grayscale: false, $textsize: inherit, $padding: 7px 18px) {\n  $color:         hsl(0, 0, 100%);\n  $border-bottom: adjust-color($base-color, $hue:  8, $saturation: -11%, $lightness: -26%);\n  $border-sides:  adjust-color($base-color, $hue:  4, $saturation: -21%, $lightness: -21%);\n  $border-top:    adjust-color($base-color, $hue: -1, $saturation: -30%, $lightness: -15%);\n  $inset-shadow:  adjust-color($base-color, $hue: -1, $saturation: -1%,  $lightness:  7%);\n  $stop-gradient: adjust-color($base-color, $hue:  8, $saturation:  14%, $lightness: -10%);\n  $text-shadow:   adjust-color($base-color, $hue:  5, $saturation: -19%, $lightness: -15%);\n\n  @if is-light($base-color) {\n    $color:       hsl(0, 0, 20%);\n    $text-shadow: adjust-color($base-color, $saturation: 10%, $lightness: 4%);\n  }\n\n  @if $grayscale == true {\n    $border-bottom: grayscale($border-bottom);\n    $border-sides:  grayscale($border-sides);\n    $border-top:    grayscale($border-top);\n    $inset-shadow:  grayscale($inset-shadow);\n    $stop-gradient: grayscale($stop-gradient);\n    $text-shadow:   grayscale($text-shadow);\n  }\n\n  border: 1px solid $border-top;\n  border-color: $border-top $border-sides $border-bottom;\n  border-radius: 16px;\n  box-shadow: inset 0 1px 0 0 $inset-shadow;\n  color: $color;\n  display: inline-block;\n  font-size: $textsize;\n  font-weight: normal;\n  line-height: 1;\n  @include linear-gradient ($base-color, $stop-gradient);\n  padding: $padding;\n  text-align: center;\n  text-decoration: none;\n  text-shadow: 0 -1px 1px $text-shadow;\n  background-clip: padding-box;\n\n  &:hover:not(:disabled) {\n    $base-color-hover:    adjust-color($base-color,                                $lightness: -4.5%);\n    $border-bottom:       adjust-color($base-color, $hue:  8, $saturation:  13.5%, $lightness: -32%);\n    $border-sides:        adjust-color($base-color, $hue:  4, $saturation: -2%,    $lightness: -27%);\n    $border-top:          adjust-color($base-color, $hue: -1, $saturation: -17%,   $lightness: -21%);\n    $inset-shadow-hover:  adjust-color($base-color,           $saturation: -1%,    $lightness:  3%);\n    $stop-gradient-hover: adjust-color($base-color, $hue:  8, $saturation: -4%,    $lightness: -15.5%);\n    $text-shadow-hover:   adjust-color($base-color, $hue:  5, $saturation: -5%,    $lightness: -22%);\n\n    @if $grayscale == true {\n      $base-color-hover:    grayscale($base-color-hover);\n      $border-bottom:       grayscale($border-bottom);\n      $border-sides:        grayscale($border-sides);\n      $border-top:          grayscale($border-top);\n      $inset-shadow-hover:  grayscale($inset-shadow-hover);\n      $stop-gradient-hover: grayscale($stop-gradient-hover);\n      $text-shadow-hover:   grayscale($text-shadow-hover);\n    }\n\n    border: 1px solid $border-top;\n    border-color: $border-top $border-sides $border-bottom;\n    box-shadow: inset 0 1px 0 0 $inset-shadow-hover;\n    cursor: pointer;\n    @include linear-gradient ($base-color-hover, $stop-gradient-hover);\n    text-shadow: 0 -1px 1px $text-shadow-hover;\n    background-clip: padding-box;\n  }\n\n  &:active:not(:disabled),\n  &:focus:not(:disabled) {\n    $active-color:         adjust-color($base-color, $hue: 4,  $saturation: -12%,  $lightness: -10%);\n    $border-active:        adjust-color($base-color, $hue: 6,  $saturation: -2.5%, $lightness: -30%);\n    $border-bottom-active: adjust-color($base-color, $hue: 11, $saturation:  6%,   $lightness: -31%);\n    $inset-shadow-active:  adjust-color($base-color, $hue: 9,  $saturation:  2%,   $lightness: -21.5%);\n    $text-shadow-active:   adjust-color($base-color, $hue: 5,  $saturation: -12%,  $lightness: -21.5%);\n\n    @if $grayscale == true {\n      $active-color:         grayscale($active-color);\n      $border-active:        grayscale($border-active);\n      $border-bottom-active: grayscale($border-bottom-active);\n      $inset-shadow-active:  grayscale($inset-shadow-active);\n      $text-shadow-active:   grayscale($text-shadow-active);\n    }\n\n    background: $active-color;\n    border: 1px solid $border-active;\n    border-bottom: 1px solid $border-bottom-active;\n    box-shadow: inset 0 0 6px 3px $inset-shadow-active;\n    text-shadow: 0 -1px 1px $text-shadow-active;\n  }\n}\n\n// Flat Button\n@mixin flat($base-color, $grayscale: false, $textsize: inherit, $padding: 7px 18px) {\n  $color:         hsl(0, 0, 100%);\n\n  @if is-light($base-color) {\n    $color:       hsl(0, 0, 20%);\n  }\n\n  background-color: $base-color;\n  border-radius: 3px;\n  border: none;\n  color: $color;\n  display: inline-block;\n  font-size: $textsize;\n  font-weight: bold;\n  padding: $padding;\n  text-decoration: none;\n  background-clip: padding-box;\n\n  &:hover:not(:disabled){\n    $base-color-hover:    adjust-color($base-color, $saturation: 4%, $lightness: 5%);\n\n    @if $grayscale == true {\n      $base-color-hover: grayscale($base-color-hover);\n    }\n\n    background-color: $base-color-hover;\n    cursor: pointer;\n  }\n\n  &:active:not(:disabled),\n  &:focus:not(:disabled) {\n    $base-color-active: adjust-color($base-color, $saturation: -4%, $lightness: -5%);\n\n    @if $grayscale == true {\n      $base-color-active: grayscale($base-color-active);\n    }\n\n    background-color: $base-color-active;\n    cursor: pointer;\n  }\n}\n\n// Flexible grid\n@function flex-grid($columns, $container-columns: $fg-max-columns) {\n  $width: $columns * $fg-column + ($columns - 1) * $fg-gutter;\n  $container-width: $container-columns * $fg-column + ($container-columns - 1) * $fg-gutter;\n  @return percentage($width / $container-width);\n\n  @warn \"The flex-grid function is deprecated and will be removed in the next major version release\";\n}\n\n// Flexible gutter\n@function flex-gutter($container-columns: $fg-max-columns, $gutter: $fg-gutter) {\n  $container-width: $container-columns * $fg-column + ($container-columns - 1) * $fg-gutter;\n  @return percentage($gutter / $container-width);\n\n  @warn \"The flex-gutter function is deprecated and will be removed in the next major version release\";\n}\n\n@function grid-width($n) {\n  @return $n * $gw-column + ($n - 1) * $gw-gutter;\n\n  @warn \"The grid-width function is deprecated and will be removed in the next major version release\";\n}\n\n@function golden-ratio($value, $increment) {\n  @return modular-scale($increment, $value, $ratio: $golden);\n\n  @warn \"The golden-ratio function is deprecated and will be removed in the next major version release. Please use the modular-scale function, instead.\";\n}\n",
		"@import url(https://fonts.googleapis.com/css?family=Dosis:400|Raleway:400);\n\n.dosis {\n  font-family: 'Dosis', sans-serif;\n  font-weight: 400;\n}\n\n.raleway {\n  font-family: 'Raleway', sans-serif;\n  font-weight: 400;\n}",
		"$container-height: 435px;\n$container-width: 720px;\n$header-height: 40px;\n$card-header-height: 30px;\n$hspace: 15px;\n$vspace: 10px;\n$primary: #600;\n$secondary: #666;\n$tertiary: #333;",
		"/**\n * Global Resets\n */\nhtml, body, div, span, applet, object, iframe,\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\na, abbr, acronym, address, big, cite, code,\ndel, dfn, em, img, ins, kbd, q, s, samp,\nsmall, strike, strong, sub, sup, tt, var,\nb, u, i, center,\ndl, dt, dd, ol, ul, li,\nfieldset, form, label, legend,\ntable, caption, tbody, tfoot, thead, tr, th, td,\narticle, aside, canvas, details, embed,\nfigure, figcaption, footer, header, hgroup,\nmenu, nav, output, ruby, section, summary,\ntime, mark, audio, video {\n  margin: 0;\n  padding: 0;\n  border: 0;\n  font-size: 100%;\n  font: inherit;\n  vertical-align: baseline;\n}\n\narticle, aside, details, figcaption, figure, footer, header, hgroup, menu, nav, section {\n  display: block;\n}\n\n\nhtml {\n  -ms-text-size-adjust: 100%;\n  -webkit-text-size-adjust: 100%;\n}\nbody {\n  font-family: 'Raleway', sans-serif;\n  font-weight: 400;\n  background: #000;\n  -webkit-font-smoothing: antialiased;\n  -webkit-text-size-adjust: none;\n  -webkit-backface-visibility: hidden;\n}\n\nh1, h2, h3, h4, h5, h6, p {\n  margin:0;\n}\n\n::-moz-selection { color: #fff; background: #2c3e50; }\n::selection { color: #fff; background: #2c3e50; }\n\n*, *:after, *:before {\n  @include box-sizing(border-box);\n}\n*:focus {\n  outline: 2px $primary solid;\n}\n\nimg {\n  border: 0;\n  max-width: 100%;\n  height: auto; \n  vertical-align: middle;\n}\n\nol, ul {\n  list-style: none;\n}\n\na {\n  background: transparent;\n}\n\n.hidden {\n  display: none;\n}",
		"// Mixin to deal with Media Queries inside of SCSS, rather than having seperate stylesheets for each\n@mixin bp($point) {\n\t@if $point == mobile {\n      @media screen and (min-width: 320px) { @content; }\n    }\n    @if $point == small {\n      @media screen and (min-width: 550px) { @content; }\n    }\n\t@if $point == medium {\n\t\t@media screen and (min-width: 670px) { @content; }\n\t}\n\t@else if $point == large {\n\t\t@media screen and (min-width: 820px) { @content; }\n\t}\n\t@else if $point == full {\n\t\t@media screen and (min-width: 1060px) { @content; }\n\t}\n}\n\n@mixin shadow($size:30, $spread:10) {\n  -webkit-box-shadow: 0px 0px #{$size}px #{$spread}px rgba(0, 0, 0, 0.75);\n  -moz-box-shadow: 0px 0px #{$size}px #{$spread}px rgba(0, 0, 0, 0.75);\n  box-shadow: 0px 0px #{$size}px #{$spread}px rgba(0, 0, 0, 0.75);\n}",
		"header {\n    background: rgba(0, 0, 0, .75);\n    border-bottom: solid 2px rgba(102, 0, 0, .75);\n    height: $header-height;\n    left: 0;\n    overflow: hidden;\n    padding: 0 $hspace;\n    position: absolute;\n    top: 0;\n    width: 100%;\n    z-index: 100;\n    h1 {\n        color: #EEE;\n        float: left;\n        font-size: 16px;\n        line-height: $header-height;\n        opacity: .8;\n        span {\n            color: #C00;\n        }\n    }\n    h2 {\n        float: right;\n        color: #DDD;\n        font-size: 15px;\n        line-height: $header-height;\n        opacity: .7;\n        a,\n        a:visited {\n            color: inherit;\n            text-decoration: none;\n            svg {\n                fill: #fff;\n                float: right;\n                height: 14px;\n                margin: 15px 0 0 $hspace/2;\n                width: 10px;\n            }\n        }\n    }\n}\n",
		"p,\nspan {\n    color: $tertiary;\n}\n\np {\n    line-height: 22px;\n    margin: $vspace 0;\n}\n\n.notes {\n    font-size: 14px;\n}\n",
		".wallpaper-image {\n    height: 100vh;\n    left: 0;\n    opacity: .1;\n    position: fixed;\n    top: 0;\n    width: 100vw;\n    @include filter(blur(7px));\n    @include transition(opacity .15s ease-out);\n\n    &.active {\n    \topacity: .7;\n    }\n    &.trailer {\n        opacity: .3;\n    }\n}",
		".arrow {\n    background: #000;\n    height: 40px;\n    padding: $vspace $hspace;\n    position: absolute;\n    top: calc(50vh - 20px);\n    width: 60px;\n    svg {\n        fill: #fff;\n        height: 14px;\n        margin-top: 5px;\n        opacity: .8;\n        stroke: #fff;\n        width: 10px;\n        @include transition(opacity .5s ease);\n    }\n    &.prev {\n        cursor: pointer;\n        left: calc(50vw - #{$container-width/2} - 40px);\n        @include transform(translateX(0));\n        @include transition(transform .5s ease);\n        &:hover {\n            @include transform(translateX(-5px));\n            svg {\n                opacity: 1;\n            }\n        }\n        &.tuck {\n            @include transform(translateX(45px));\n        }\n    }\n    &.next {\n        cursor: pointer;\n        right: calc(50vw - #{$container-width/2} - 40px);\n        @include transform(translateX(0));\n        @include transition(transform .5s ease);\n        text-align: right;\n        &:hover {\n            @include transform(translateX(5px));\n            svg {\n                opacity: 1;\n            }\n        }\n        &.tuck {\n            @include transform(translateX(-45px));\n        }\n    }\n}\n",
		".card-container {\n    @include shadow();\n    background: rgba(255, 255, 255, .9);\n    height: $container-height;\n    margin: calc(50vh - #{$container-height / 2}) 0 0 calc(50vw - #{$container-width / 2});\n    overflow: hidden;\n    position: relative;\n    width: $container-width;\n    z-index: 2;\n    .card-inner-container {\n        height: $container-height;\n        overflow: hidden;\n        position: relative;\n        width: 100%;\n        .card-header {\n            @extend .dosis;\n            background: $primary;\n            line-height: $card-header-height;\n            height: $card-header-height;\n            overflow: hidden;\n            padding: 0 $hspace;\n            position: relative;\n            span {\n                color: #fff;\n            }\n            .card-sub-header {\n                background: #000;\n                border-bottom: $card-header-height solid transparent;\n                border-left: $card-header-height solid $primary;\n                height: $card-header-height;\n                padding: 0 $hspace*2 0 $hspace*5;\n                position: absolute;\n                top: 0;\n                right: -500px;\n                @include transition(right .2s linear);\n                &.active {\n                    right: -15px;\n                    @include transition(right cubic-bezier(0.460,1.240,0.250,1.010) 1.25s);\n                }\n                span {\n                    color: #CCC;\n                }\n            }\n        }\n        .card-content {\n            height: $container-height - $card-header-height;\n            overflow: hidden;\n            padding: $vspace $hspace;\n            .poster {\n                float: left;\n                overflow: hidden;\n                @include calc(width, \"100% * .3625\"); // .3625 = 261 / 720\n                img {\n                    border: 0;\n                    height: ($container-height - $card-header-height) - ($vspace * 2);\n                    width: auto;\n                }\n            }\n            .content {\n                height: ($container-height - $card-header-height) - ($vspace * 2);\n                overflow: hidden;\n                padding: 0 0 0 $hspace;\n                position: relative;\n                h3 {\n                    @extend .dosis;\n                    font-size: 35px;\n                }\n                .sub-container {\n                    overflow: hidden;\n                }\n                .year {\n                    color: $secondary;\n                    float: left;\n                }\n                .imdb {\n                    float: left;\n                    margin: 0 $hspace;\n                }\n                .watch-container {\n                    bottom: 0;\n                    left: $hspace;\n                    overflow: hidden;\n                    position: absolute;\n                    ul {\n                        margin-top: $vspace/2;\n                        li {\n                            float: left;\n                            height: 50px;\n                            margin: 0 $hspace/3 0 0;\n                            width: 50px;\n                            &:last-child {\n                                margin: 0;\n                            }\n                            img {\n                                width: 100%;\n                                height: 50px;\n                                border: 0;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n}\n",
		".trailer-container {\n    border-bottom: 130px solid $primary;\n    border-left: 130px solid transparent;\n    bottom: 0;\n    height: 0;\n    position: absolute;\n    right: 0;\n    @include transition(all .5s ease-out);\n    width: 0;\n    &.active {\n        border-bottom: $container-width*2 solid #000;\n        border-left: $container-width*2 solid transparent;\n        @include transition(all .5s ease-out);\n    }\n}\n\n.trailer-content {\n    bottom: $vspace;\n    cursor: pointer;\n    opacity: 1;\n    position: absolute;\n    right: $hspace;\n    z-index: 11;\n    width: 75px;\n    svg {\n        display: block;\n        fill: #fff;\n        height: 25px;\n        margin: 0 auto $vspace/2;\n        width: 25px;\n        @include transform(translate3d(0, 0, 0));\n\n        &.close {\n            background: rgba(0,0,0,.5);\n            float: right;\n            margin: 0 25px 25px 0;\n            stroke: #fff;\n            stroke-width: 2px;\n        }\n    }\n    span {\n        font-size: 12px;\n        color: #fff;\n    }\n}\n.youtube-container {\n    height: $container-height + $card-header-height;\n    left: 0;\n    padding-top: $card-header-height/2;\n    position: absolute;\n    top: 0;\n    width: $container-width;\n    z-index: 10;\n}"
	],
	"mappings": "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",
	"names": []
}